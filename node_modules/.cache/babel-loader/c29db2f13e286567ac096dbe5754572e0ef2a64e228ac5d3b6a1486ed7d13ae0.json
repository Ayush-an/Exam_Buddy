{"ast":null,"code":"var _jsxFileName = \"D:\\\\Quize-API\\\\frontend\\\\src\\\\components\\\\AdminQuestionForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminQuestionForm() {\n  _s();\n  const [question, setQuestion] = useState({\n    section: '',\n    questionType: 'text',\n    questionText: '',\n    questionImage: '',\n    questionAudio: '',\n    options: [{\n      type: 'text',\n      content: ''\n    }, {\n      type: 'text',\n      content: ''\n    }, {\n      type: 'text',\n      content: ''\n    }, {\n      type: 'text',\n      content: ''\n    }],\n    correctAnswer: ''\n  });\n  const [sections, setSections] = useState([]);\n  const [newSection, setNewSection] = useState('');\n  const [viewQuestions, setViewQuestions] = useState([]);\n  useEffect(() => {\n    fetchSections();\n  }, []);\n  const fetchSections = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/api/sections');\n      setSections(res.data);\n    } catch (error) {\n      console.error('Error fetching sections:', error);\n      alert('Failed to fetch sections');\n    }\n  };\n  const handleOptionChange = (index, field, value) => {\n    const newOptions = [...question.options];\n    newOptions[index][field] = value;\n    setQuestion({\n      ...question,\n      options: newOptions\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const validAnswers = ['a', 'b', 'c', 'd'];\n    if (!question.section || !question.questionText || !validAnswers.includes(question.correctAnswer)) {\n      alert('Please fill in all fields correctly');\n      return;\n    }\n    try {\n      await axios.post('http://localhost:5000/api/questions/create', question);\n      alert('Question created!');\n      setQuestion({\n        section: '',\n        questionType: 'text',\n        questionText: '',\n        questionImage: '',\n        questionAudio: '',\n        options: [{\n          type: 'text',\n          content: ''\n        }, {\n          type: 'text',\n          content: ''\n        }, {\n          type: 'text',\n          content: ''\n        }, {\n          type: 'text',\n          content: ''\n        }],\n        correctAnswer: ''\n      });\n      setViewQuestions([]);\n    } catch (error) {\n      console.error('Error creating question:', error);\n      alert('Failed to create question');\n    }\n  };\n  const handleFileUpload = (file, callback) => {\n    const reader = new FileReader();\n    reader.onloadend = () => callback(reader.result);\n    reader.readAsDataURL(file);\n  };\n  const handleAddSection = async () => {\n    if (!newSection.trim()) return;\n    try {\n      await axios.post('http://localhost:5000/api/sections/create', {\n        name: newSection\n      });\n      setNewSection('');\n      fetchSections();\n    } catch (error) {\n      console.error('Error adding section:', error);\n      alert('Failed to add section');\n    }\n  };\n  const handleDeleteSection = async sectionId => {\n    try {\n      await axios.delete(`http://localhost:5000/api/sections/${sectionId}`);\n      fetchSections();\n      if (question.section === sectionId) {\n        setQuestion({\n          ...question,\n          section: ''\n        });\n        setViewQuestions([]);\n      }\n    } catch (error) {\n      console.error('Error deleting section:', error);\n      alert('Failed to delete section');\n    }\n  };\n  const handleSectionReview = async () => {\n    if (!question.section) {\n      alert('Please select a section');\n      return;\n    }\n    try {\n      const res = await axios.get(`http://localhost:5000/api/questions/by-section/${question.section}`);\n      setViewQuestions(res.data);\n    } catch (error) {\n      console.error('Error fetching questions for section:', error);\n      alert('Failed to fetch questions');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newSection,\n        onChange: e => setNewSection(e.target.value),\n        className: \"p-2 border\",\n        placeholder: \"New Section Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddSection,\n        className: \"px-4 py-2 text-white bg-purple-600 rounded\",\n        children: \"Add Section\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 space-y-1\",\n        children: sections.map(sec => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between p-2 border rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-semibold text-purple-700\",\n            children: sec.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteSection(sec._id),\n            className: \"px-2 py-1 text-sm text-white bg-red-500 rounded\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)]\n        }, sec._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"w-full p-2 border\",\n        value: question.section,\n        onChange: e => setQuestion({\n          ...question,\n          section: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Section\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), sections.map(sec => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: sec._id,\n          children: sec.name\n        }, sec._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        className: \"w-full p-2 border\",\n        value: question.questionType,\n        onChange: e => setQuestion({\n          ...question,\n          questionType: e.target.value,\n          questionText: ''\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"text\",\n          children: \"Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"image\",\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"audio\",\n          children: \"Audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), question.questionType === 'text' && /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"w-full p-2 border\",\n        placeholder: \"Enter Question Text\",\n        value: question.questionText,\n        onChange: e => setQuestion({\n          ...question,\n          questionText: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), (question.questionType === 'image' || question.questionType === 'audio') && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"w-full p-2 border\",\n          placeholder: `Paste ${question.questionType} URL`,\n          value: question.questionText,\n          onChange: e => setQuestion({\n            ...question,\n            questionText: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: question.questionType === 'image' ? 'image/*' : 'audio/*',\n          onChange: e => {\n            const file = e.target.files[0];\n            if (file) handleFileUpload(file, data => setQuestion({\n              ...question,\n              questionText: data\n            }));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 13\n        }, this), question.questionType === 'image' && question.questionText && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: question.questionText,\n          alt: \"Preview\",\n          className: \"w-32 h-auto rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 15\n        }, this), question.questionType === 'audio' && question.questionText && /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          src: question.questionText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this), question.options.map((opt, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col gap-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: opt.type,\n          onChange: e => handleOptionChange(i, 'type', e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"text\",\n            children: \"Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"image\",\n            children: \"Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"audio\",\n            children: \"Audio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"p-2 border\",\n          placeholder: \"Option Content (URL)\",\n          value: opt.content,\n          onChange: e => handleOptionChange(i, 'content', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: opt.type === 'image' ? 'image/*' : 'audio/*',\n          onChange: e => {\n            const file = e.target.files[0];\n            if (file) handleFileUpload(file, data => handleOptionChange(i, 'content', data));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"w-full p-2 border\",\n        placeholder: \"Correct Answer (a/b/c/d)\",\n        value: question.correctAnswer,\n        onChange: e => setQuestion({\n          ...question,\n          correctAnswer: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"px-4 py-2 text-white bg-green-600 rounded\",\n        children: \"Submit Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSectionReview,\n        className: \"px-4 py-2 mt-4 text-white bg-blue-500 rounded\",\n        disabled: !question.section,\n        children: \"Review Question Paper\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this), viewQuestions.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold\",\n          children: [\"Section: \", question.section]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"mt-2 space-y-2\",\n          children: viewQuestions.map((q, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"p-2 space-y-2 border rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [idx + 1, \". \", q.questionText]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 19\n            }, this), q.questionImage && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: q.questionImage,\n              alt: `Question ${idx + 1} illustration`,\n              className: \"w-32 rounded\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 39\n            }, this), q.questionAudio && /*#__PURE__*/_jsxDEV(\"audio\", {\n              controls: true,\n              src: q.questionAudio\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 39\n            }, this)]\n          }, q._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminQuestionForm, \"Pa98RdKeN6QXsC783SVGBsza+Yw=\");\n_c = AdminQuestionForm;\nvar _c;\n$RefreshReg$(_c, \"AdminQuestionForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","AdminQuestionForm","_s","question","setQuestion","section","questionType","questionText","questionImage","questionAudio","options","type","content","correctAnswer","sections","setSections","newSection","setNewSection","viewQuestions","setViewQuestions","fetchSections","res","get","data","error","console","alert","handleOptionChange","index","field","value","newOptions","handleSubmit","e","preventDefault","validAnswers","includes","post","handleFileUpload","file","callback","reader","FileReader","onloadend","result","readAsDataURL","handleAddSection","trim","name","handleDeleteSection","sectionId","delete","handleSectionReview","className","children","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","sec","_id","onSubmit","accept","files","src","alt","controls","opt","i","disabled","length","q","idx","_c","$RefreshReg$"],"sources":["D:/Quize-API/frontend/src/components/AdminQuestionForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport default function AdminQuestionForm() {\n  const [question, setQuestion] = useState({\n    section: '',\n    questionType: 'text',\n    questionText: '',\n    questionImage: '',\n    questionAudio: '',\n    options: [\n      { type: 'text', content: '' },\n      { type: 'text', content: '' },\n      { type: 'text', content: '' },\n      { type: 'text', content: '' }\n    ],\n    correctAnswer: ''\n  });\n\n  const [sections, setSections] = useState([]);\n  const [newSection, setNewSection] = useState('');\n  const [viewQuestions, setViewQuestions] = useState([]);\n\n  useEffect(() => {\n    fetchSections();\n  }, []);\n\n  const fetchSections = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/api/sections');\n      setSections(res.data);\n    } catch (error) {\n      console.error('Error fetching sections:', error);\n      alert('Failed to fetch sections');\n    }\n  };\n\n  const handleOptionChange = (index, field, value) => {\n    const newOptions = [...question.options];\n    newOptions[index][field] = value;\n    setQuestion({ ...question, options: newOptions });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const validAnswers = ['a', 'b', 'c', 'd'];\n    if (!question.section || !question.questionText || !validAnswers.includes(question.correctAnswer)) {\n      alert('Please fill in all fields correctly');\n      return;\n    }\n\n    try {\n      await axios.post('http://localhost:5000/api/questions/create', question);\n      alert('Question created!');\n      setQuestion({\n        section: '',\n        questionType: 'text',\n        questionText: '',\n        questionImage: '',\n        questionAudio: '',\n        options: [\n          { type: 'text', content: '' },\n          { type: 'text', content: '' },\n          { type: 'text', content: '' },\n          { type: 'text', content: '' }\n        ],\n        correctAnswer: ''\n      });\n      setViewQuestions([]);\n    } catch (error) {\n      console.error('Error creating question:', error);\n      alert('Failed to create question');\n    }\n  };\n\n  const handleFileUpload = (file, callback) => {\n    const reader = new FileReader();\n    reader.onloadend = () => callback(reader.result);\n    reader.readAsDataURL(file);\n  };\n\n  const handleAddSection = async () => {\n    if (!newSection.trim()) return;\n    try {\n      await axios.post('http://localhost:5000/api/sections/create', { name: newSection });\n      setNewSection('');\n      fetchSections();\n    } catch (error) {\n      console.error('Error adding section:', error);\n      alert('Failed to add section');\n    }\n  };\n\n  const handleDeleteSection = async (sectionId) => {\n    try {\n      await axios.delete(`http://localhost:5000/api/sections/${sectionId}`);\n      fetchSections();\n      if (question.section === sectionId) {\n        setQuestion({ ...question, section: '' });\n        setViewQuestions([]);\n      }\n    } catch (error) {\n      console.error('Error deleting section:', error);\n      alert('Failed to delete section');\n    }\n  };\n\n  const handleSectionReview = async () => {\n    if (!question.section) {\n      alert('Please select a section');\n      return;\n    }\n    try {\n      const res = await axios.get(`http://localhost:5000/api/questions/by-section/${question.section}`);\n      setViewQuestions(res.data);\n    } catch (error) {\n      console.error('Error fetching questions for section:', error);\n      alert('Failed to fetch questions');\n    }\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Section Management */}\n      <div className=\"space-y-2\">\n        <input\n          value={newSection}\n          onChange={(e) => setNewSection(e.target.value)}\n          className=\"p-2 border\"\n          placeholder=\"New Section Name\"\n        />\n        <button onClick={handleAddSection} className=\"px-4 py-2 text-white bg-purple-600 rounded\">\n          Add Section\n        </button>\n        <div className=\"mt-2 space-y-1\">\n          {sections.map((sec) => (\n            <div key={sec._id} className=\"flex items-center justify-between p-2 border rounded\">\n              <span className=\"font-semibold text-purple-700\">{sec.name}</span>\n              <button onClick={() => handleDeleteSection(sec._id)} className=\"px-2 py-1 text-sm text-white bg-red-500 rounded\">\n                Delete\n              </button>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      {/* Form */}\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\n        <select\n          className=\"w-full p-2 border\"\n          value={question.section}\n          onChange={(e) => setQuestion({ ...question, section: e.target.value })}\n        >\n          <option value=\"\">Select Section</option>\n          {sections.map((sec) => (\n            <option key={sec._id} value={sec._id}>\n              {sec.name}\n            </option>\n          ))}\n        </select>\n\n        <select\n          className=\"w-full p-2 border\"\n          value={question.questionType}\n          onChange={(e) => setQuestion({ ...question, questionType: e.target.value, questionText: '' })}\n        >\n          <option value=\"text\">Text</option>\n          <option value=\"image\">Image</option>\n          <option value=\"audio\">Audio</option>\n        </select>\n\n        {/* Question Input */}\n        {question.questionType === 'text' && (\n          <input\n            className=\"w-full p-2 border\"\n            placeholder=\"Enter Question Text\"\n            value={question.questionText}\n            onChange={(e) => setQuestion({ ...question, questionText: e.target.value })}\n          />\n        )}\n\n        {(question.questionType === 'image' || question.questionType === 'audio') && (\n          <div className=\"space-y-2\">\n            <input\n              className=\"w-full p-2 border\"\n              placeholder={`Paste ${question.questionType} URL`}\n              value={question.questionText}\n              onChange={(e) => setQuestion({ ...question, questionText: e.target.value })}\n            />\n            <input\n              type=\"file\"\n              accept={question.questionType === 'image' ? 'image/*' : 'audio/*'}\n              onChange={(e) => {\n                const file = e.target.files[0];\n                if (file) handleFileUpload(file, (data) => setQuestion({ ...question, questionText: data }));\n              }}\n            />\n            {question.questionType === 'image' && question.questionText && (\n              <img src={question.questionText} alt=\"Preview\" className=\"w-32 h-auto rounded\" />\n            )}\n            {question.questionType === 'audio' && question.questionText && (\n              <audio controls src={question.questionText} />\n            )}\n          </div>\n        )}\n\n        {/* Options */}\n        {question.options.map((opt, i) => (\n          <div key={i} className=\"flex flex-col gap-1\">\n            <select value={opt.type} onChange={(e) => handleOptionChange(i, 'type', e.target.value)}>\n              <option value=\"text\">Text</option>\n              <option value=\"image\">Image</option>\n              <option value=\"audio\">Audio</option>\n            </select>\n            <input\n              className=\"p-2 border\"\n              placeholder=\"Option Content (URL)\"\n              value={opt.content}\n              onChange={(e) => handleOptionChange(i, 'content', e.target.value)}\n            />\n            <input\n              type=\"file\"\n              accept={opt.type === 'image' ? 'image/*' : 'audio/*'}\n              onChange={(e) => {\n                const file = e.target.files[0];\n                if (file) handleFileUpload(file, (data) => handleOptionChange(i, 'content', data));\n              }}\n            />\n          </div>\n        ))}\n\n        {/* Correct Answer */}\n        <input\n          className=\"w-full p-2 border\"\n          placeholder=\"Correct Answer (a/b/c/d)\"\n          value={question.correctAnswer}\n          onChange={(e) => setQuestion({ ...question, correctAnswer: e.target.value })}\n        />\n\n        <button type=\"submit\" className=\"px-4 py-2 text-white bg-green-600 rounded\">\n          Submit Question\n        </button>\n      </form>\n\n      {/* Section Review */}\n      <div>\n        <button\n          onClick={handleSectionReview}\n          className=\"px-4 py-2 mt-4 text-white bg-blue-500 rounded\"\n          disabled={!question.section}\n        >\n          Review Question Paper\n        </button>\n\n        {viewQuestions.length > 0 && (\n          <div className=\"mt-4\">\n            <h2 className=\"text-lg font-semibold\">Section: {question.section}</h2>\n            <ul className=\"mt-2 space-y-2\">\n              {viewQuestions.map((q, idx) => (\n                <li key={q._id} className=\"p-2 space-y-2 border rounded\">\n                  <div>{idx + 1}. {q.questionText}</div>\n                  {q.questionImage && <img src={q.questionImage} alt={`Question ${idx + 1} illustration`} className=\"w-32 rounded\" />\n                }\n                  {q.questionAudio && <audio controls src={q.questionAudio} />}\n                </li>\n              ))}\n            </ul>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}