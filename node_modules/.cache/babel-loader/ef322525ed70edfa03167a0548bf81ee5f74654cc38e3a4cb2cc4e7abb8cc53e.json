{"ast":null,"code":"var _jsxFileName = \"D:\\\\Exam-portel\\\\frontend\\\\src\\\\pages\\\\Question.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Question = () => {\n  _s();\n  const [sections, setSections] = useState([]);\n  const [sets, setSets] = useState([]); // Will store objects like { name: 'Science', timeLimitMinutes: 30 }\n  const [createNewSet, setCreateNewSet] = useState(false);\n  const [newSetName, setNewSetName] = useState('');\n  const [setTimeLimit, setSetTimeLimit] = useState(''); // This will hold the timeLimitMinutes for the selected/new set\n  const [useCustomTimer, setUseCustomTimer] = useState(false); // This state isn't directly used for question submission anymore. Timer is at set level.\n\n  const [form, setForm] = useState({\n    category: '',\n    section: '',\n    set: '',\n    // This will store the name of the selected set\n    questionText: '',\n    questionImage: null,\n    questionAudio: null,\n    options: [{\n      type: 'text',\n      content: ''\n    }, {\n      type: 'text',\n      content: ''\n    }, {\n      type: 'text',\n      content: ''\n    }, {\n      type: 'text',\n      content: ''\n    }],\n    correctAnswer: 'a'\n    // Removed 'timer' from form state as it's no longer part of the Question schema\n  });\n  const categories = ['Beginner', 'Intermediate', 'Advanced'];\n\n  // **IMPORTANT: Ensure these section names match your backend's sectionSchema enum exactly.**\n  const sectionMap = {\n    Beginner: ['Beginner', 'Intermediate', 'Advanced', 'Pro Advanced'],\n    Intermediate: ['Beginner Challenge', 'Intermediate Challenge', 'Advanced Challenge', 'Pro Advanced Challenge'],\n    // Corrected 'Pro Challenge' to 'Pro Advanced Challenge'\n    Advanced: ['Beginner Level', 'Intermediate Level', 'Advanced Level', 'Pro Advanced Level'] // Corrected 'Pro Level' to 'Pro Advanced Level'\n  };\n\n  // Fetch sections based on category\n  useEffect(() => {\n    if (form.category) {\n      // In a real app, you might fetch sections from the backend too,\n      // but for now, we'll use the hardcoded map.\n      setSections(sectionMap[form.category] || []);\n      // Reset dependent fields when category changes\n      setForm(prev => ({\n        ...prev,\n        section: '',\n        set: ''\n      }));\n      setSets([]); // Clear sets when category changes\n    } else {\n      setSections([]);\n      setSets([]);\n      setForm(prev => ({\n        ...prev,\n        section: '',\n        set: ''\n      }));\n    }\n    // Reset set creation/update states\n    setCreateNewSet(false);\n    setNewSetName('');\n    setSetTimeLimit('');\n    setUseCustomTimer(false); // Reset this as well\n  }, [form.category]);\n\n  // Fetch sets when category or section changes\n  useEffect(() => {\n    if (form.category && form.section) {\n      fetchSets(form.category, form.section);\n    } else {\n      setSets([]);\n      setForm(prev => ({\n        ...prev,\n        set: ''\n      }));\n      setSetTimeLimit(''); // Clear set time limit when no section/category selected\n    }\n  }, [form.category, form.section]);\n  const fetchSets = async (category, section) => {\n    try {\n      const res = await axios.get(`http://localhost:3000/api/question-papers/${category}/sections/${section}/sets`);\n      // The backend now returns objects: { name: '...', timeLimitMinutes: ... }\n      setSets(res.data); // Store the full set objects\n      // If the current form.set is not in the fetched sets, reset it.\n      if (form.set && !res.data.some(s => s.name === form.set)) {\n        setForm(prev => ({\n          ...prev,\n          set: ''\n        }));\n        setSetTimeLimit('');\n      } else if (form.set) {\n        // If a set is already selected, update its timer based on fetched data\n        const currentSet = res.data.find(s => s.name === form.set);\n        if (currentSet) {\n          setSetTimeLimit(String(currentSet.timeLimitMinutes || ''));\n        } else {\n          setSetTimeLimit('');\n        }\n      }\n    } catch (err) {\n      console.error('Error fetching sets:', err);\n      setSets([]);\n      setForm(prev => ({\n        ...prev,\n        set: ''\n      }));\n      setSetTimeLimit('');\n      alert('Error fetching sets. Check console for details.');\n    }\n  };\n  const createSet = async () => {\n    if (!newSetName.trim()) return alert('Set name is required');\n    try {\n      const payload = {\n        name: newSetName.trim()\n      }; // Backend expects 'name'\n      if (setTimeLimit !== '' && setTimeLimit !== null) {\n        payload.timeLimitMinutes = Number(setTimeLimit); // Backend expects 'timeLimitMinutes'\n      }\n      await axios.post(`http://localhost:3000/api/question-papers/${form.category}/sections/${form.section}/sets`, payload);\n      alert('✅ Set created successfully');\n      setCreateNewSet(false);\n\n      // Update form set value to new set\n      setForm(prev => ({\n        ...prev,\n        set: newSetName.trim()\n      }));\n\n      // Reset new set inputs\n      setNewSetName('');\n      setSetTimeLimit('');\n\n      // Refetch sets after creation to update dropdown\n      fetchSets(form.category, form.section);\n    } catch (err) {\n      console.error('❌ Failed to create set:', err.response ? err.response.data : err);\n      alert(`❌ Failed to create set: ${err.response ? err.response.data.message : err.message}`);\n    }\n  };\n  const updateTimeLimit = async () => {\n    if (!form.set) {\n      return alert('Please select a set to update its time limit.');\n    }\n    try {\n      await axios.patch(`http://localhost:3000/api/question-papers/${form.category}/sections/${form.section}/sets/${form.set}/time-limit`, {\n        timeLimitMinutes: Number(setTimeLimit)\n      } // Backend expects 'timeLimitMinutes'\n      );\n      alert('✅ Time limit updated');\n      // Refetch sets to ensure UI is consistent\n      fetchSets(form.category, form.section);\n    } catch (err) {\n      console.error('❌ Failed to update time limit:', err.response ? err.response.data : err);\n      alert(`❌ Failed to update time limit: ${err.response ? err.response.data.message : err.message}`);\n    }\n  };\n  const deleteTimeLimit = async () => {\n    if (!form.set) {\n      return alert('Please select a set to delete its time limit.');\n    }\n    try {\n      await axios.delete(`http://localhost:3000/api/question-papers/${form.category}/sections/${form.section}/sets/${form.set}/time-limit`);\n      alert('✅ Time limit deleted');\n      setSetTimeLimit(''); // Clear the input field as timer is removed\n      // Refetch sets to ensure UI is consistent\n      fetchSets(form.category, form.section);\n    } catch (err) {\n      console.error('❌ Failed to delete time limit:', err.response ? err.response.data : err);\n      alert(`❌ Failed to delete time limit: ${err.response ? err.response.data.message : err.message}`);\n    }\n  };\n  const handleCategoryChange = e => {\n    const selectedCategory = e.target.value;\n    setForm(prev => ({\n      ...prev,\n      category: selectedCategory,\n      section: '',\n      // Reset section and set when category changes\n      set: '',\n      questionText: '',\n      questionImage: null,\n      questionAudio: null,\n      options: [{\n        type: 'text',\n        content: ''\n      }, {\n        type: 'text',\n        content: ''\n      }, {\n        type: 'text',\n        content: ''\n      }, {\n        type: 'text',\n        content: ''\n      }],\n      correctAnswer: 'a'\n    }));\n    setSections(sectionMap[selectedCategory] || []);\n    setSets([]);\n    setCreateNewSet(false);\n    setNewSetName('');\n    setSetTimeLimit('');\n    setUseCustomTimer(false); // Reset custom timer flag\n  };\n  const handleSectionChange = e => {\n    const selectedSection = e.target.value;\n    setForm(prev => ({\n      ...prev,\n      section: selectedSection,\n      set: '',\n      // Reset set when section changes\n      questionText: '',\n      questionImage: null,\n      questionAudio: null,\n      options: [{\n        type: 'text',\n        content: ''\n      }, {\n        type: 'text',\n        content: ''\n      }, {\n        type: 'text',\n        content: ''\n      }, {\n        type: 'text',\n        content: ''\n      }],\n      correctAnswer: 'a'\n    }));\n    // fetchSets will be triggered by useEffect due to form.section change\n    setCreateNewSet(false);\n    setNewSetName('');\n    setSetTimeLimit('');\n    setUseCustomTimer(false); // Reset custom timer flag\n  };\n  const handleSetChange = async e => {\n    const selectedSetName = e.target.value;\n    setForm(prev => ({\n      ...prev,\n      set: selectedSetName\n    }));\n\n    // Find the selected set from the `sets` state to get its time limit\n    const currentSet = sets.find(s => s.name === selectedSetName);\n    if (currentSet) {\n      setSetTimeLimit(String(currentSet.timeLimitMinutes || '')); // Use timeLimitMinutes\n      setUseCustomTimer(false); // Default to using set timer if available\n    } else {\n      setSetTimeLimit('');\n      setUseCustomTimer(false);\n    }\n  };\n  const handleOptionChange = (index, field, value, isFile = false) => {\n    const updatedOptions = [...form.options];\n    // For file inputs, the content is the File object itself.\n    updatedOptions[index][field] = isFile ? value : value;\n    setForm({\n      ...form,\n      options: updatedOptions\n    });\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      files\n    } = e.target;\n    if (files && files.length > 0) {\n      setForm({\n        ...form,\n        [name]: files[0]\n      });\n    } else {\n      setForm({\n        ...form,\n        [name]: value\n      });\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Basic validation\n    if (!form.category || !form.section || !form.set || !form.questionText || form.options.some(opt => !opt.content) || !form.correctAnswer) {\n      return alert('Please fill in all required fields (Category, Section, Set, Question Text, Options, Correct Answer).');\n    }\n    const formData = new FormData();\n    formData.append('category', form.category);\n    formData.append('section', form.section);\n    formData.append('set', form.set); // Use form.set directly\n    formData.append('questionText', form.questionText);\n    if (form.questionImage) formData.append('questionImage', form.questionImage);\n    if (form.questionAudio) formData.append('questionAudio', form.questionAudio);\n    formData.append('correctAnswer', form.correctAnswer);\n\n    // Removed the 'timer' field from formData as it's not in the backend Question schema\n\n    form.options.forEach((opt, idx) => {\n      // Ensure content is not a File object for text options, and is correct for files\n      const contentValue = opt.type === 'text' ? opt.content : opt.content instanceof File ? opt.content : null;\n      if (contentValue) {\n        formData.append(`options[${idx}][type]`, opt.type);\n        formData.append(`options[${idx}][content]`, contentValue);\n      }\n    });\n    try {\n      await axios.post('http://localhost:3000/api/questions/create', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert('✅ Question created successfully!');\n      // Optionally reset form here or provide user feedback\n      // For example, reset the form completely\n      setForm({\n        category: '',\n        section: '',\n        set: '',\n        questionText: '',\n        questionImage: null,\n        questionAudio: null,\n        options: [{\n          type: 'text',\n          content: ''\n        }, {\n          type: 'text',\n          content: ''\n        }, {\n          type: 'text',\n          content: ''\n        }, {\n          type: 'text',\n          content: ''\n        }],\n        correctAnswer: 'a'\n      });\n      setSections([]);\n      setSets([]);\n      setCreateNewSet(false);\n      setNewSetName('');\n      setSetTimeLimit('');\n      setUseCustomTimer(false);\n    } catch (err) {\n      console.error('❌ Error submitting question:', err.response ? err.response.data : err);\n      alert(`❌ Error submitting question: ${err.response ? err.response.data.message : err.message}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-4xl p-6 mx-auto bg-white rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4 text-2xl font-bold\",\n      children: \"Create Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-medium\",\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"category\",\n          value: form.category,\n          onChange: handleCategoryChange,\n          className: \"w-full p-2 border rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Select Category --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: cat,\n            children: cat\n          }, cat, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), form.category && sections.length > 0 &&\n      /*#__PURE__*/\n      // Only show if a category is selected and sections are available\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-medium\",\n          children: \"Section\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"section\",\n          value: form.section,\n          onChange: handleSectionChange,\n          className: \"w-full p-2 border rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Select Section --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this), sections.map(sec => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: sec,\n            children: sec\n          }, sec, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 11\n      }, this), form.section &&\n      /*#__PURE__*/\n      // Only show if a section is selected\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-medium\",\n          children: \"Set\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 13\n        }, this), !createNewSet ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"set\",\n            value: form.set,\n            onChange: handleSetChange,\n            className: \"w-full p-2 border rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- Select Set --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 19\n            }, this), sets.map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: s.name,\n              children: s.name\n            }, s.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 344,\n              columnNumber: 21\n            }, this) // Render set name\n            )]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              setCreateNewSet(true);\n              setNewSetName('');\n              setSetTimeLimit('');\n            },\n            className: \"mt-2 text-sm text-blue-600 underline\",\n            children: \"+ Create New Set\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 17\n          }, this), form.set &&\n          /*#__PURE__*/\n          // Only show update/delete time limit if a set is selected\n          _jsxDEV(\"div\", {\n            className: \"mt-2 space-y-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium\",\n              children: \"Set Time Limit (in minutes)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Update time limit in minutes\",\n              value: setTimeLimit || '' // Display current time limit for the selected set\n              ,\n              onChange: e => setSetTimeLimit(e.target.value),\n              className: \"w-full p-2 border rounded\",\n              min: \"0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex gap-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: updateTimeLimit,\n                className: \"px-3 py-1 text-white bg-blue-600 rounded\",\n                children: \"Update Time Limit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 367,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: deleteTimeLimit,\n                className: \"px-3 py-1 text-white bg-red-600 rounded\",\n                children: \"Delete Time Limit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter new set name\",\n            value: newSetName,\n            onChange: e => setNewSetName(e.target.value),\n            className: \"w-full p-2 border rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Optional: Set time limit in minutes\",\n            value: setTimeLimit || '',\n            onChange: e => setSetTimeLimit(e.target.value),\n            className: \"w-full p-2 border rounded\",\n            min: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: createSet,\n              className: \"px-3 py-1 text-white bg-green-600 rounded\",\n              children: \"Create Set\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setCreateNewSet(false),\n              className: \"text-sm text-gray-500 underline\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-medium\",\n          children: \"Question Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"questionText\",\n          value: form.questionText,\n          onChange: handleChange,\n          className: \"w-full p-2 border rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 402,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-medium\",\n          children: \"Question Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"questionImage\",\n          accept: \"image/*\",\n          onChange: handleChange,\n          className: \"w-full p-2 border rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-medium\",\n          children: \"Question Audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"questionAudio\",\n          accept: \"audio/*\",\n          onChange: handleChange,\n          className: \"w-full p-2 border rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-medium\",\n          children: \"Options\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this), form.options.map((option, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2 mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: option.type,\n            onChange: e => handleOptionChange(idx, 'type', e.target.value),\n            className: \"p-2 border rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"text\",\n              children: \"Text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"image\",\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"audio\",\n              children: \"Audio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 15\n          }, this), option.type === 'text' ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: `Option ${String.fromCharCode(97 + idx)}`,\n            value: option.content,\n            onChange: e => handleOptionChange(idx, 'content', e.target.value),\n            className: \"w-full p-2 border rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: option.type === 'image' ? 'image/*' : 'audio/*',\n            onChange: e => handleOptionChange(idx, 'content', e.target.files[0], true) // Pass the File object directly\n            ,\n            className: \"w-full p-2 border rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 17\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-medium\",\n          children: \"Correct Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"correctAnswer\",\n          value: form.correctAnswer,\n          onChange: handleChange,\n          className: \"w-full p-2 border rounded\",\n          children: form.options.map((_, idx) =>\n          /*#__PURE__*/\n          // Dynamically generate options based on number of options\n          _jsxDEV(\"option\", {\n            value: String.fromCharCode(97 + idx),\n            children: String.fromCharCode(65 + idx)\n          }, String.fromCharCode(97 + idx), false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-medium\",\n          children: \"Associated Set Timer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 465,\n          columnNumber: 11\n        }, this), setTimeLimit && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-1 text-sm text-gray-600\",\n          children: [\"Set's default timer: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [setTimeLimit, \" minutes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 468,\n            columnNumber: 36\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 13\n        }, this), !setTimeLimit && form.set && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-1 text-sm text-gray-600\",\n          children: \"This set has no default time limit.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-1 text-sm text-gray-600\",\n          children: \"The time limit for this question is determined by its selected set.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"px-4 py-2 text-white bg-blue-600 rounded hover:bg-blue-700\",\n        children: \"Submit Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 307,\n    columnNumber: 5\n  }, this);\n};\n_s(Question, \"jBE+MK/EnvQaHFQlExXwhSaGtLY=\");\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Question","_s","sections","setSections","sets","setSets","createNewSet","setCreateNewSet","newSetName","setNewSetName","setTimeLimit","setSetTimeLimit","useCustomTimer","setUseCustomTimer","form","setForm","category","section","set","questionText","questionImage","questionAudio","options","type","content","correctAnswer","categories","sectionMap","Beginner","Intermediate","Advanced","prev","fetchSets","res","get","data","some","s","name","currentSet","find","String","timeLimitMinutes","err","console","error","alert","createSet","trim","payload","Number","post","response","message","updateTimeLimit","patch","deleteTimeLimit","delete","handleCategoryChange","e","selectedCategory","target","value","handleSectionChange","selectedSection","handleSetChange","selectedSetName","handleOptionChange","index","field","isFile","updatedOptions","handleChange","files","length","handleSubmit","preventDefault","opt","formData","FormData","append","forEach","idx","contentValue","File","headers","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","map","cat","sec","onClick","placeholder","min","accept","option","fromCharCode","_","_c","$RefreshReg$"],"sources":["D:/Exam-portel/frontend/src/pages/Question.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Question = () => {\n  const [sections, setSections] = useState([]);\n  const [sets, setSets] = useState([]); // Will store objects like { name: 'Science', timeLimitMinutes: 30 }\n  const [createNewSet, setCreateNewSet] = useState(false);\n  const [newSetName, setNewSetName] = useState('');\n  const [setTimeLimit, setSetTimeLimit] = useState(''); // This will hold the timeLimitMinutes for the selected/new set\n  const [useCustomTimer, setUseCustomTimer] = useState(false); // This state isn't directly used for question submission anymore. Timer is at set level.\n\n  const [form, setForm] = useState({\n    category: '',\n    section: '',\n    set: '', // This will store the name of the selected set\n    questionText: '',\n    questionImage: null,\n    questionAudio: null,\n    options: [\n      { type: 'text', content: '' },\n      { type: 'text', content: '' },\n      { type: 'text', content: '' },\n      { type: 'text', content: '' }\n    ],\n    correctAnswer: 'a',\n    // Removed 'timer' from form state as it's no longer part of the Question schema\n  });\n\n  const categories = ['Beginner', 'Intermediate', 'Advanced'];\n\n  // **IMPORTANT: Ensure these section names match your backend's sectionSchema enum exactly.**\n  const sectionMap = {\n    Beginner: ['Beginner', 'Intermediate', 'Advanced', 'Pro Advanced'],\n    Intermediate: ['Beginner Challenge', 'Intermediate Challenge', 'Advanced Challenge', 'Pro Advanced Challenge'], // Corrected 'Pro Challenge' to 'Pro Advanced Challenge'\n    Advanced: ['Beginner Level', 'Intermediate Level', 'Advanced Level', 'Pro Advanced Level'] // Corrected 'Pro Level' to 'Pro Advanced Level'\n  };\n\n  // Fetch sections based on category\n  useEffect(() => {\n    if (form.category) {\n      // In a real app, you might fetch sections from the backend too,\n      // but for now, we'll use the hardcoded map.\n      setSections(sectionMap[form.category] || []);\n      // Reset dependent fields when category changes\n      setForm(prev => ({ ...prev, section: '', set: '' }));\n      setSets([]); // Clear sets when category changes\n    } else {\n      setSections([]);\n      setSets([]);\n      setForm(prev => ({ ...prev, section: '', set: '' }));\n    }\n    // Reset set creation/update states\n    setCreateNewSet(false);\n    setNewSetName('');\n    setSetTimeLimit('');\n    setUseCustomTimer(false); // Reset this as well\n  }, [form.category]);\n\n\n  // Fetch sets when category or section changes\n  useEffect(() => {\n    if (form.category && form.section) {\n      fetchSets(form.category, form.section);\n    } else {\n      setSets([]);\n      setForm(prev => ({ ...prev, set: '' }));\n      setSetTimeLimit(''); // Clear set time limit when no section/category selected\n    }\n  }, [form.category, form.section]);\n\n  const fetchSets = async (category, section) => {\n    try {\n      const res = await axios.get(`http://localhost:3000/api/question-papers/${category}/sections/${section}/sets`);\n      // The backend now returns objects: { name: '...', timeLimitMinutes: ... }\n      setSets(res.data); // Store the full set objects\n      // If the current form.set is not in the fetched sets, reset it.\n      if (form.set && !res.data.some(s => s.name === form.set)) {\n        setForm(prev => ({ ...prev, set: '' }));\n        setSetTimeLimit('');\n      } else if (form.set) {\n        // If a set is already selected, update its timer based on fetched data\n        const currentSet = res.data.find(s => s.name === form.set);\n        if (currentSet) {\n          setSetTimeLimit(String(currentSet.timeLimitMinutes || ''));\n        } else {\n          setSetTimeLimit('');\n        }\n      }\n    } catch (err) {\n      console.error('Error fetching sets:', err);\n      setSets([]);\n      setForm(prev => ({ ...prev, set: '' }));\n      setSetTimeLimit('');\n      alert('Error fetching sets. Check console for details.');\n    }\n  };\n\n  const createSet = async () => {\n    if (!newSetName.trim()) return alert('Set name is required');\n\n    try {\n      const payload = { name: newSetName.trim() }; // Backend expects 'name'\n      if (setTimeLimit !== '' && setTimeLimit !== null) {\n        payload.timeLimitMinutes = Number(setTimeLimit); // Backend expects 'timeLimitMinutes'\n      }\n\n      await axios.post(`http://localhost:3000/api/question-papers/${form.category}/sections/${form.section}/sets`, payload);\n      alert('✅ Set created successfully');\n      setCreateNewSet(false);\n\n      // Update form set value to new set\n      setForm(prev => ({ ...prev, set: newSetName.trim() }));\n\n      // Reset new set inputs\n      setNewSetName('');\n      setSetTimeLimit('');\n\n      // Refetch sets after creation to update dropdown\n      fetchSets(form.category, form.section);\n    } catch (err) {\n      console.error('❌ Failed to create set:', err.response ? err.response.data : err);\n      alert(`❌ Failed to create set: ${err.response ? err.response.data.message : err.message}`);\n    }\n  };\n\n  const updateTimeLimit = async () => {\n    if (!form.set) {\n      return alert('Please select a set to update its time limit.');\n    }\n    try {\n      await axios.patch(\n        `http://localhost:3000/api/question-papers/${form.category}/sections/${form.section}/sets/${form.set}/time-limit`,\n        { timeLimitMinutes: Number(setTimeLimit) } // Backend expects 'timeLimitMinutes'\n      );\n      alert('✅ Time limit updated');\n      // Refetch sets to ensure UI is consistent\n      fetchSets(form.category, form.section);\n    } catch (err) {\n      console.error('❌ Failed to update time limit:', err.response ? err.response.data : err);\n      alert(`❌ Failed to update time limit: ${err.response ? err.response.data.message : err.message}`);\n    }\n  };\n\n  const deleteTimeLimit = async () => {\n    if (!form.set) {\n      return alert('Please select a set to delete its time limit.');\n    }\n    try {\n      await axios.delete(\n        `http://localhost:3000/api/question-papers/${form.category}/sections/${form.section}/sets/${form.set}/time-limit`\n      );\n      alert('✅ Time limit deleted');\n      setSetTimeLimit(''); // Clear the input field as timer is removed\n      // Refetch sets to ensure UI is consistent\n      fetchSets(form.category, form.section);\n    } catch (err) {\n      console.error('❌ Failed to delete time limit:', err.response ? err.response.data : err);\n      alert(`❌ Failed to delete time limit: ${err.response ? err.response.data.message : err.message}`);\n    }\n  };\n\n  const handleCategoryChange = (e) => {\n    const selectedCategory = e.target.value;\n    setForm(prev => ({\n      ...prev,\n      category: selectedCategory,\n      section: '', // Reset section and set when category changes\n      set: '',\n      questionText: '',\n      questionImage: null,\n      questionAudio: null,\n      options: [\n        { type: 'text', content: '' },\n        { type: 'text', content: '' },\n        { type: 'text', content: '' },\n        { type: 'text', content: '' }\n      ],\n      correctAnswer: 'a',\n    }));\n    setSections(sectionMap[selectedCategory] || []);\n    setSets([]);\n    setCreateNewSet(false);\n    setNewSetName('');\n    setSetTimeLimit('');\n    setUseCustomTimer(false); // Reset custom timer flag\n  };\n\n  const handleSectionChange = (e) => {\n    const selectedSection = e.target.value;\n    setForm(prev => ({\n      ...prev,\n      section: selectedSection,\n      set: '', // Reset set when section changes\n      questionText: '',\n      questionImage: null,\n      questionAudio: null,\n      options: [\n        { type: 'text', content: '' },\n        { type: 'text', content: '' },\n        { type: 'text', content: '' },\n        { type: 'text', content: '' }\n      ],\n      correctAnswer: 'a',\n    }));\n    // fetchSets will be triggered by useEffect due to form.section change\n    setCreateNewSet(false);\n    setNewSetName('');\n    setSetTimeLimit('');\n    setUseCustomTimer(false); // Reset custom timer flag\n  };\n\n  const handleSetChange = async (e) => {\n    const selectedSetName = e.target.value;\n    setForm(prev => ({ ...prev, set: selectedSetName }));\n\n    // Find the selected set from the `sets` state to get its time limit\n    const currentSet = sets.find(s => s.name === selectedSetName);\n    if (currentSet) {\n      setSetTimeLimit(String(currentSet.timeLimitMinutes || '')); // Use timeLimitMinutes\n      setUseCustomTimer(false); // Default to using set timer if available\n    } else {\n      setSetTimeLimit('');\n      setUseCustomTimer(false);\n    }\n  };\n\n  const handleOptionChange = (index, field, value, isFile = false) => {\n    const updatedOptions = [...form.options];\n    // For file inputs, the content is the File object itself.\n    updatedOptions[index][field] = isFile ? value : value;\n    setForm({ ...form, options: updatedOptions });\n  };\n\n  const handleChange = (e) => {\n    const { name, value, files } = e.target;\n    if (files && files.length > 0) {\n      setForm({ ...form, [name]: files[0] });\n    } else {\n      setForm({ ...form, [name]: value });\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Basic validation\n    if (!form.category || !form.section || !form.set || !form.questionText || form.options.some(opt => !opt.content) || !form.correctAnswer) {\n      return alert('Please fill in all required fields (Category, Section, Set, Question Text, Options, Correct Answer).');\n    }\n\n    const formData = new FormData();\n\n    formData.append('category', form.category);\n    formData.append('section', form.section);\n    formData.append('set', form.set); // Use form.set directly\n    formData.append('questionText', form.questionText);\n    if (form.questionImage) formData.append('questionImage', form.questionImage);\n    if (form.questionAudio) formData.append('questionAudio', form.questionAudio);\n    formData.append('correctAnswer', form.correctAnswer);\n\n    // Removed the 'timer' field from formData as it's not in the backend Question schema\n\n    form.options.forEach((opt, idx) => {\n      // Ensure content is not a File object for text options, and is correct for files\n      const contentValue = opt.type === 'text' ? opt.content : (opt.content instanceof File ? opt.content : null);\n      if (contentValue) {\n        formData.append(`options[${idx}][type]`, opt.type);\n        formData.append(`options[${idx}][content]`, contentValue);\n      }\n    });\n\n    try {\n      await axios.post('http://localhost:3000/api/questions/create', formData, {\n        headers: { 'Content-Type': 'multipart/form-data' }\n      });\n      alert('✅ Question created successfully!');\n      // Optionally reset form here or provide user feedback\n      // For example, reset the form completely\n      setForm({\n        category: '',\n        section: '',\n        set: '',\n        questionText: '',\n        questionImage: null,\n        questionAudio: null,\n        options: [\n          { type: 'text', content: '' },\n          { type: 'text', content: '' },\n          { type: 'text', content: '' },\n          { type: 'text', content: '' }\n        ],\n        correctAnswer: 'a',\n      });\n      setSections([]);\n      setSets([]);\n      setCreateNewSet(false);\n      setNewSetName('');\n      setSetTimeLimit('');\n      setUseCustomTimer(false);\n    } catch (err) {\n      console.error('❌ Error submitting question:', err.response ? err.response.data : err);\n      alert(`❌ Error submitting question: ${err.response ? err.response.data.message : err.message}`);\n    }\n  };\n\n  return (\n    <div className=\"max-w-4xl p-6 mx-auto bg-white rounded shadow\">\n      <h2 className=\"mb-4 text-2xl font-bold\">Create Question</h2>\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\n\n        {/* Category */}\n        <div>\n          <label className=\"block font-medium\">Category</label>\n          <select name=\"category\" value={form.category} onChange={handleCategoryChange} className=\"w-full p-2 border rounded\">\n            <option value=\"\">-- Select Category --</option>\n            {categories.map(cat => (\n              <option key={cat} value={cat}>{cat}</option>\n            ))}\n          </select>\n        </div>\n\n        {/* Section */}\n        {form.category && sections.length > 0 && ( // Only show if a category is selected and sections are available\n          <div>\n            <label className=\"block font-medium\">Section</label>\n            <select name=\"section\" value={form.section} onChange={handleSectionChange} className=\"w-full p-2 border rounded\">\n              <option value=\"\">-- Select Section --</option>\n              {sections.map(sec => (\n                <option key={sec} value={sec}>{sec}</option>\n              ))}\n            </select>\n          </div>\n        )}\n\n        {/* Set */}\n        {form.section && ( // Only show if a section is selected\n          <div>\n            <label className=\"block font-medium\">Set</label>\n            {!createNewSet ? (\n              <>\n                <select name=\"set\" value={form.set} onChange={handleSetChange} className=\"w-full p-2 border rounded\">\n                  <option value=\"\">-- Select Set --</option>\n                  {sets.map(s => (\n                    <option key={s.name} value={s.name}>{s.name}</option> // Render set name\n                  ))}\n                </select>\n                <button type=\"button\" onClick={() => {\n                  setCreateNewSet(true);\n                  setNewSetName('');\n                  setSetTimeLimit('');\n                }} className=\"mt-2 text-sm text-blue-600 underline\">\n                  + Create New Set\n                </button>\n\n                {form.set && ( // Only show update/delete time limit if a set is selected\n                  <div className=\"mt-2 space-y-2\">\n                    <label className=\"block text-sm font-medium\">Set Time Limit (in minutes)</label>\n                    <input\n                      type=\"number\"\n                      placeholder=\"Update time limit in minutes\"\n                      value={setTimeLimit || ''} // Display current time limit for the selected set\n                      onChange={(e) => setSetTimeLimit(e.target.value)}\n                      className=\"w-full p-2 border rounded\"\n                      min=\"0\"\n                    />\n                    <div className=\"flex gap-4\">\n                      <button type=\"button\" onClick={updateTimeLimit} className=\"px-3 py-1 text-white bg-blue-600 rounded\">Update Time Limit</button>\n                      <button type=\"button\" onClick={deleteTimeLimit} className=\"px-3 py-1 text-white bg-red-600 rounded\">Delete Time Limit</button>\n                    </div>\n                  </div>\n                )}\n              </>\n            ) : (\n              <div className=\"mt-2 space-y-2\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Enter new set name\"\n                  value={newSetName}\n                  onChange={(e) => setNewSetName(e.target.value)}\n                  className=\"w-full p-2 border rounded\"\n                />\n                <input\n                  type=\"number\"\n                  placeholder=\"Optional: Set time limit in minutes\"\n                  value={setTimeLimit || ''}\n                  onChange={(e) => setSetTimeLimit(e.target.value)}\n                  className=\"w-full p-2 border rounded\"\n                  min=\"0\"\n                />\n                <div className=\"flex gap-4\">\n                  <button type=\"button\" onClick={createSet} className=\"px-3 py-1 text-white bg-green-600 rounded\">Create Set</button>\n                  <button type=\"button\" onClick={() => setCreateNewSet(false)} className=\"text-sm text-gray-500 underline\">Cancel</button>\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Question Text */}\n        <div>\n          <label className=\"block font-medium\">Question Text</label>\n          <input type=\"text\" name=\"questionText\" value={form.questionText} onChange={handleChange} className=\"w-full p-2 border rounded\" />\n        </div>\n\n        {/* Question Image */}\n        <div>\n          <label className=\"block font-medium\">Question Image</label>\n          <input type=\"file\" name=\"questionImage\" accept=\"image/*\" onChange={handleChange} className=\"w-full p-2 border rounded\" />\n        </div>\n\n        {/* Question Audio */}\n        <div>\n          <label className=\"block font-medium\">Question Audio</label>\n          <input type=\"file\" name=\"questionAudio\" accept=\"audio/*\" onChange={handleChange} className=\"w-full p-2 border rounded\" />\n        </div>\n\n        {/* Options */}\n        <div>\n          <label className=\"block font-medium\">Options</label>\n          {form.options.map((option, idx) => (\n            <div key={idx} className=\"flex items-center gap-2 mb-2\">\n              <select\n                value={option.type}\n                onChange={(e) => handleOptionChange(idx, 'type', e.target.value)}\n                className=\"p-2 border rounded\"\n              >\n                <option value=\"text\">Text</option>\n                <option value=\"image\">Image</option>\n                <option value=\"audio\">Audio</option>\n              </select>\n              {option.type === 'text' ? (\n                <input\n                  type=\"text\"\n                  placeholder={`Option ${String.fromCharCode(97 + idx)}`}\n                  value={option.content}\n                  onChange={(e) => handleOptionChange(idx, 'content', e.target.value)}\n                  className=\"w-full p-2 border rounded\"\n                />\n              ) : (\n                <input\n                  type=\"file\"\n                  accept={option.type === 'image' ? 'image/*' : 'audio/*'}\n                  onChange={(e) => handleOptionChange(idx, 'content', e.target.files[0], true)} // Pass the File object directly\n                  className=\"w-full p-2 border rounded\"\n                />\n              )}\n            </div>\n          ))}\n        </div>\n\n        {/* Correct Answer */}\n        <div>\n          <label className=\"block font-medium\">Correct Answer</label>\n          <select name=\"correctAnswer\" value={form.correctAnswer} onChange={handleChange} className=\"w-full p-2 border rounded\">\n            {form.options.map((_, idx) => ( // Dynamically generate options based on number of options\n              <option key={String.fromCharCode(97 + idx)} value={String.fromCharCode(97 + idx)}>\n                {String.fromCharCode(65 + idx)}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {/* Timer - This section is primarily for displaying and managing set time limit, not for question submission */}\n        <div>\n          <label className=\"block font-medium\">Associated Set Timer</label>\n          {setTimeLimit && (\n            <p className=\"mb-1 text-sm text-gray-600\">\n              Set's default timer: <strong>{setTimeLimit} minutes</strong>\n            </p>\n          )}\n          {!setTimeLimit && form.set && (\n             <p className=\"mb-1 text-sm text-gray-600\">\n               This set has no default time limit.\n             </p>\n          )}\n          {/* Removed useCustomTimer checkbox and input as question schema doesn't have timer field */}\n          <p className=\"mb-1 text-sm text-gray-600\">\n             The time limit for this question is determined by its selected set.\n          </p>\n        </div>\n\n        {/* Submit */}\n        <button type=\"submit\" className=\"px-4 py-2 text-white bg-blue-600 rounded hover:bg-blue-700\">\n          Submit Question\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Question;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}