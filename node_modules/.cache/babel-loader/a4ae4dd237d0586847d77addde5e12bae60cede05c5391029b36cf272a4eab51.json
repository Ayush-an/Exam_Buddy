{"ast":null,"code":"var _jsxFileName = \"D:\\\\Exam-portel\\\\frontend\\\\src\\\\pages\\\\PaperSetPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PaperSetPage() {\n  _s();\n  const [questionPapers, setQuestionPapers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedSetQuestions, setSelectedSetQuestions] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [currentSetInfo, setCurrentSetInfo] = useState(null); // Stores info about the set being viewed\n\n  useEffect(() => {\n    const fetchAllQuestionPapers = async () => {\n      try {\n        setLoading(true);\n        // This endpoint returns all categories, sections, and sets\n        const res = await axios.get('http://localhost:3000/api/question-papers');\n        setQuestionPapers(res.data);\n      } catch (err) {\n        console.error('Error fetching question papers:', err.response ? err.response.data : err);\n        setError('Failed to load question papers. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAllQuestionPapers();\n  }, []); // Empty dependency array means this runs once on component mount\n\n  // Function to fetch questions for a specific set\n  const fetchQuestionsForSet = async (category, sectionName, setName) => {\n    try {\n      // Show loading or clear previous questions\n      setSelectedSetQuestions([]);\n      setError(null);\n      setCurrentSetInfo({\n        category,\n        sectionName,\n        setName\n      }); // Store current set info\n\n      const res = await axios.get(`http://localhost:3000/api/questions/${category}/${sectionName}/${setName}`);\n      setSelectedSetQuestions(res.data);\n      setIsModalOpen(true); // Open the modal to display questions\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error fetching questions for set:', err.response ? err.response.data : err);\n      setError(`Failed to load questions for set \"${setName}\". ${((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message}`);\n      setIsModalOpen(true); // Open modal to show error\n    }\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setSelectedSetQuestions([]); // Clear questions when closing modal\n    setCurrentSetInfo(null);\n    setError(null); // Clear errors\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen bg-gray-100\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-gray-700\",\n        children: \"Loading question papers...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n  if (error && !isModalOpen) {\n    // Display global error only if modal is not open\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center min-h-screen bg-red-100\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-red-700\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Retrieve current admin from localStorage (set during sign-in)\n  const admin = JSON.parse(localStorage.getItem('admin') || '{}');\n  const isAdminModerator = admin.role === 'moderator';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen p-8 bg-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-6xl p-8 mx-auto bg-white rounded-lg shadow-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mb-8 text-3xl font-extrabold text-center text-gray-800\",\n        children: isAdminModerator ? \"Moderator's Paper Sets Overview\" : \"Question Papers Overview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), questionPapers.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-center text-gray-600\",\n        children: \"No question papers found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-8\",\n        children: questionPapers.map(paper => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-6 border border-gray-200 rounded-lg bg-gray-50\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"mb-4 text-2xl font-bold text-blue-700\",\n            children: paper.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this), paper.sections && paper.sections.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"space-y-6\",\n            children: paper.sections.map(section => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"py-2 pl-4 border-l-4 border-blue-400\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                className: \"mb-2 text-xl font-semibold text-gray-800\",\n                children: [section.name, \" Section\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mb-2 text-sm text-gray-600\",\n                children: section.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 25\n              }, this), section.isPaid && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"mr-2 text-sm font-medium text-purple-600\",\n                children: \"Paid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 44\n              }, this), section.hasTimeLimit && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-sm font-medium text-orange-600\",\n                children: [section.timeLimitMinutes, \" min time limit\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 50\n              }, this), section.sets && section.sets.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grid grid-cols-1 gap-4 mt-3 md:grid-cols-2 lg:grid-cols-3\",\n                children: section.sets.map(set => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"p-4 bg-white border border-gray-200 rounded-md shadow-sm\",\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-lg font-medium text-gray-900\",\n                    children: [\"Set Name: \", set.name]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 33\n                  }, this), set.timeLimitMinutes && /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm text-gray-700\",\n                    children: [\"Time Limit: \", set.timeLimitMinutes, \" minutes\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 35\n                  }, this), !set.timeLimitMinutes && /*#__PURE__*/_jsxDEV(\"p\", {\n                    className: \"text-sm italic text-gray-500\",\n                    children: \"No specific time limit for this set.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 35\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => fetchQuestionsForSet(paper.category, section.name, set.name),\n                    className: \"w-full px-4 py-2 mt-3 text-sm font-medium text-white transition duration-150 ease-in-out bg-indigo-600 rounded-md hover:bg-indigo-700\",\n                    children: \"View Questions\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 33\n                  }, this)]\n                }, set.name, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 31\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 27\n              }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mt-2 italic text-gray-500\",\n                children: \"No sets defined for this section.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 27\n              }, this)]\n            }, section.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"italic text-gray-500\",\n            children: \"No sections defined for this category.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 19\n          }, this)]\n        }, paper.category, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 z-50 flex items-center justify-center p-4 bg-gray-600 bg-opacity-75\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-xl w-full max-w-3xl max-h-[90vh] overflow-y-auto p-6 relative\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: closeModal,\n          className: \"absolute text-2xl font-bold text-gray-500 top-3 right-3 hover:text-gray-700\",\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"mb-4 text-2xl font-bold text-center text-gray-800\",\n          children: [\"Questions for Set: \", (currentSetInfo === null || currentSetInfo === void 0 ? void 0 : currentSetInfo.setName) || 'N/A', currentSetInfo && /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-base font-normal text-gray-600\",\n            children: [\"(\", currentSetInfo.category, \" > \", currentSetInfo.sectionName, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-4 text-center text-red-600\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 23\n        }, this), !error && selectedSetQuestions.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-center text-gray-600\",\n          children: \"No questions found for this set.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-6\",\n          children: selectedSetQuestions.map((question, qIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-4 border border-gray-200 rounded-md bg-gray-50\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"mb-2 text-lg font-semibold\",\n              children: [\"Q\", qIndex + 1, \": \", question.questionText]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 21\n            }, this), question.questionImage && /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `http://localhost:3000/${question.questionImage}`,\n              alt: \"Question visual\",\n              className: \"h-auto max-w-full mb-2 rounded-md\",\n              onError: e => {\n                e.target.onerror = null;\n                e.target.src = \"https://placehold.co/300x200/cccccc/000000?text=Image+Not+Found\";\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 23\n            }, this), question.questionAudio && /*#__PURE__*/_jsxDEV(\"audio\", {\n              controls: true,\n              src: `http://localhost:3000/${question.questionAudio}`,\n              className: \"w-full mb-2\",\n              children: \"Your browser does not support the audio element.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"pl-5 space-y-1 list-disc\",\n              children: question.options.map((option, oIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n                className: `${String.fromCharCode(97 + oIndex) === question.correctAnswer ? 'text-green-700 font-medium' : 'text-gray-800'}`,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"font-bold\",\n                  children: [String.fromCharCode(65 + oIndex), \".\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 27\n                }, this), ' ', option.type === 'text' && /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: option.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 54\n                }, this), option.type === 'image' && /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: `http://localhost:3000/${option.content}`,\n                  alt: `Option ${String.fromCharCode(65 + oIndex)}`,\n                  className: \"inline-block max-w-[100px] max-h-[100px] rounded\",\n                  onError: e => {\n                    e.target.onerror = null;\n                    e.target.src = \"https://placehold.co/100x100/cccccc/000000?text=Option+Image\";\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 29\n                }, this), option.type === 'audio' && /*#__PURE__*/_jsxDEV(\"audio\", {\n                  controls: true,\n                  src: `http://localhost:3000/${option.content}`,\n                  className: \"inline-block w-3/4\",\n                  children: \"Your browser does not support the audio element.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 29\n                }, this), String.fromCharCode(97 + oIndex) === question.correctAnswer && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ml-2 text-xs\",\n                  children: \"(Correct Answer)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 91\n                }, this)]\n              }, oIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 21\n            }, this)]\n          }, question._id || qIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s(PaperSetPage, \"2GNZUdv+QRNN5KoUOM6klALx56E=\");\n_c = PaperSetPage;\nvar _c;\n$RefreshReg$(_c, \"PaperSetPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","PaperSetPage","_s","questionPapers","setQuestionPapers","loading","setLoading","error","setError","selectedSetQuestions","setSelectedSetQuestions","isModalOpen","setIsModalOpen","currentSetInfo","setCurrentSetInfo","fetchAllQuestionPapers","res","get","data","err","console","response","fetchQuestionsForSet","category","sectionName","setName","_err$response","_err$response$data","message","closeModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","admin","JSON","parse","localStorage","getItem","isAdminModerator","role","length","map","paper","sections","section","name","description","isPaid","hasTimeLimit","timeLimitMinutes","sets","set","onClick","question","qIndex","questionText","questionImage","src","alt","onError","e","target","onerror","questionAudio","controls","options","option","oIndex","String","fromCharCode","correctAnswer","type","content","_id","_c","$RefreshReg$"],"sources":["D:/Exam-portel/frontend/src/pages/PaperSetPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport default function PaperSetPage() {\n  const [questionPapers, setQuestionPapers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedSetQuestions, setSelectedSetQuestions] = useState([]);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [currentSetInfo, setCurrentSetInfo] = useState(null); // Stores info about the set being viewed\n\n  useEffect(() => {\n    const fetchAllQuestionPapers = async () => {\n      try {\n        setLoading(true);\n        // This endpoint returns all categories, sections, and sets\n        const res = await axios.get('http://localhost:3000/api/question-papers');\n        setQuestionPapers(res.data);\n      } catch (err) {\n        console.error('Error fetching question papers:', err.response ? err.response.data : err);\n        setError('Failed to load question papers. Please try again.');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchAllQuestionPapers();\n  }, []); // Empty dependency array means this runs once on component mount\n\n  // Function to fetch questions for a specific set\n  const fetchQuestionsForSet = async (category, sectionName, setName) => {\n    try {\n      // Show loading or clear previous questions\n      setSelectedSetQuestions([]);\n      setError(null);\n      setCurrentSetInfo({ category, sectionName, setName }); // Store current set info\n\n      const res = await axios.get(`http://localhost:3000/api/questions/${category}/${sectionName}/${setName}`);\n      setSelectedSetQuestions(res.data);\n      setIsModalOpen(true); // Open the modal to display questions\n    } catch (err) {\n      console.error('Error fetching questions for set:', err.response ? err.response.data : err);\n      setError(`Failed to load questions for set \"${setName}\". ${err.response?.data?.message || err.message}`);\n      setIsModalOpen(true); // Open modal to show error\n    }\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n    setSelectedSetQuestions([]); // Clear questions when closing modal\n    setCurrentSetInfo(null);\n    setError(null); // Clear errors\n  };\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-screen bg-gray-100\">\n        <p className=\"text-lg text-gray-700\">Loading question papers...</p>\n      </div>\n    );\n  }\n\n  if (error && !isModalOpen) { // Display global error only if modal is not open\n    return (\n      <div className=\"flex items-center justify-center min-h-screen bg-red-100\">\n        <p className=\"text-lg text-red-700\">{error}</p>\n      </div>\n    );\n  }\n\n  // Retrieve current admin from localStorage (set during sign-in)\n  const admin = JSON.parse(localStorage.getItem('admin') || '{}');\n  const isAdminModerator = admin.role === 'moderator';\n\n  return (\n    <div className=\"min-h-screen p-8 bg-gray-100\">\n      <div className=\"max-w-6xl p-8 mx-auto bg-white rounded-lg shadow-md\">\n        <h2 className=\"mb-8 text-3xl font-extrabold text-center text-gray-800\">\n          {isAdminModerator ? \"Moderator's Paper Sets Overview\" : \"Question Papers Overview\"}\n        </h2>\n\n        {questionPapers.length === 0 ? (\n          <p className=\"text-lg text-center text-gray-600\">No question papers found.</p>\n        ) : (\n          <div className=\"space-y-8\">\n            {questionPapers.map(paper => (\n              <div key={paper.category} className=\"p-6 border border-gray-200 rounded-lg bg-gray-50\">\n                <h3 className=\"mb-4 text-2xl font-bold text-blue-700\">{paper.category}</h3>\n                {paper.sections && paper.sections.length > 0 ? (\n                  <div className=\"space-y-6\">\n                    {paper.sections.map(section => (\n                      <div key={section.name} className=\"py-2 pl-4 border-l-4 border-blue-400\">\n                        <h4 className=\"mb-2 text-xl font-semibold text-gray-800\">{section.name} Section</h4>\n                        <p className=\"mb-2 text-sm text-gray-600\">{section.description}</p>\n                        {section.isPaid && <span className=\"mr-2 text-sm font-medium text-purple-600\">Paid</span>}\n                        {section.hasTimeLimit && <span className=\"text-sm font-medium text-orange-600\">{section.timeLimitMinutes} min time limit</span>}\n\n                        {section.sets && section.sets.length > 0 ? (\n                          <div className=\"grid grid-cols-1 gap-4 mt-3 md:grid-cols-2 lg:grid-cols-3\">\n                            {section.sets.map(set => (\n                              <div key={set.name} className=\"p-4 bg-white border border-gray-200 rounded-md shadow-sm\">\n                                <p className=\"text-lg font-medium text-gray-900\">Set Name: {set.name}</p>\n                                {set.timeLimitMinutes && (\n                                  <p className=\"text-sm text-gray-700\">Time Limit: {set.timeLimitMinutes} minutes</p>\n                                )}\n                                {!set.timeLimitMinutes && (\n                                  <p className=\"text-sm italic text-gray-500\">No specific time limit for this set.</p>\n                                )}\n                                <button\n                                  onClick={() => fetchQuestionsForSet(paper.category, section.name, set.name)}\n                                  className=\"w-full px-4 py-2 mt-3 text-sm font-medium text-white transition duration-150 ease-in-out bg-indigo-600 rounded-md hover:bg-indigo-700\"\n                                >\n                                  View Questions\n                                </button>\n                              </div>\n                            ))}\n                          </div>\n                        ) : (\n                          <p className=\"mt-2 italic text-gray-500\">No sets defined for this section.</p>\n                        )}\n                      </div>\n                    ))}\n                  </div>\n                ) : (\n                  <p className=\"italic text-gray-500\">No sections defined for this category.</p>\n                )}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      {/* Questions Modal */}\n      {isModalOpen && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center p-4 bg-gray-600 bg-opacity-75\">\n          <div className=\"bg-white rounded-lg shadow-xl w-full max-w-3xl max-h-[90vh] overflow-y-auto p-6 relative\">\n            <button\n              onClick={closeModal}\n              className=\"absolute text-2xl font-bold text-gray-500 top-3 right-3 hover:text-gray-700\"\n            >\n              &times;\n            </button>\n            <h3 className=\"mb-4 text-2xl font-bold text-center text-gray-800\">\n              Questions for Set: {currentSetInfo?.setName || 'N/A'}\n              {currentSetInfo && <p className=\"text-base font-normal text-gray-600\">({currentSetInfo.category} &gt; {currentSetInfo.sectionName})</p>}\n            </h3>\n\n            {error && <p className=\"mb-4 text-center text-red-600\">{error}</p>}\n\n            {!error && selectedSetQuestions.length === 0 ? (\n              <p className=\"text-center text-gray-600\">No questions found for this set.</p>\n            ) : (\n              <div className=\"space-y-6\">\n                {selectedSetQuestions.map((question, qIndex) => (\n                  <div key={question._id || qIndex} className=\"p-4 border border-gray-200 rounded-md bg-gray-50\">\n                    <p className=\"mb-2 text-lg font-semibold\">Q{qIndex + 1}: {question.questionText}</p>\n                    {question.questionImage && (\n                      <img src={`http://localhost:3000/${question.questionImage}`} alt=\"Question visual\" className=\"h-auto max-w-full mb-2 rounded-md\" onError={(e) => { e.target.onerror = null; e.target.src=\"https://placehold.co/300x200/cccccc/000000?text=Image+Not+Found\"; }}/>\n                    )}\n                    {question.questionAudio && (\n                      <audio controls src={`http://localhost:3000/${question.questionAudio}`} className=\"w-full mb-2\">\n                        Your browser does not support the audio element.\n                      </audio>\n                    )}\n                    <ul className=\"pl-5 space-y-1 list-disc\">\n                      {question.options.map((option, oIndex) => (\n                        <li key={oIndex} className={`${String.fromCharCode(97 + oIndex) === question.correctAnswer ? 'text-green-700 font-medium' : 'text-gray-800'}`}>\n                          <span className=\"font-bold\">{String.fromCharCode(65 + oIndex)}.</span>{' '}\n                          {option.type === 'text' && <span>{option.content}</span>}\n                          {option.type === 'image' && (\n                            <img src={`http://localhost:3000/${option.content}`} alt={`Option ${String.fromCharCode(65 + oIndex)}`} className=\"inline-block max-w-[100px] max-h-[100px] rounded\" onError={(e) => { e.target.onerror = null; e.target.src=\"https://placehold.co/100x100/cccccc/000000?text=Option+Image\"; }}/>\n                          )}\n                          {option.type === 'audio' && (\n                            <audio controls src={`http://localhost:3000/${option.content}`} className=\"inline-block w-3/4\">\n                              Your browser does not support the audio element.\n                            </audio>\n                          )}\n                          {String.fromCharCode(97 + oIndex) === question.correctAnswer && <span className=\"ml-2 text-xs\">(Correct Answer)</span>}\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}