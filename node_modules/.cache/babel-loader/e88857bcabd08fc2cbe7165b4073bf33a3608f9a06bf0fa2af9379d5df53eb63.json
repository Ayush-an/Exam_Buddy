{"ast":null,"code":"var _jsxFileName = \"D:\\\\Exam-portel\\\\frontend\\\\src\\\\pages\\\\Question.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Question = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [sets, setSets] = useState([]);\n  const [createNewSet, setCreateNewSet] = useState(false);\n  const [newSetName, setNewSetName] = useState('');\n  const [setTimeLimit, setSetTimeLimit] = useState('');\n  const [useCustomTimer, setUseCustomTimer] = useState(false);\n  const [form, setForm] = useState({\n    category: '',\n    section: '',\n    set: '',\n    questionText: '',\n    questionImage: null,\n    questionAudio: null,\n    options: [{\n      type: 'text',\n      content: ''\n    }, {\n      type: 'text',\n      content: ''\n    }, {\n      type: 'text',\n      content: ''\n    }, {\n      type: 'text',\n      content: ''\n    }],\n    correctAnswer: 'a',\n    timer: null\n  });\n  const sectionMap = {\n    Beginner: ['Beginner', 'Intermediate', 'Advanced', 'Pro Advanced'],\n    Intermediate: ['Beginner Challenge', 'Intermediate Challenge', 'Advanced Challenge', 'Pro Challenge'],\n    Advanced: ['Beginner Level', 'Intermediate Level', 'Advanced Level', 'Pro Level']\n  };\n\n  // Fetch categories on mount\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const res = await axios.get('http://localhost:3000/api/categories');\n        setCategories(res.data);\n      } catch (err) {\n        console.error('Error fetching categories:', err);\n      }\n    };\n    fetchCategories();\n  }, []);\n\n  // Fetch sections when category changes\n  useEffect(() => {\n    if (form.category) {\n      const fetchSections = async () => {\n        try {\n          const res = await axios.get(`http://localhost:3000/api/categories/${form.category}/sections`);\n          setSections(res.data);\n        } catch (err) {\n          console.error('Error fetching sections:', err);\n          setSections([]);\n        }\n      };\n      fetchSections();\n    } else {\n      setSections([]);\n      setForm(prev => ({\n        ...prev,\n        section: '',\n        set: ''\n      }));\n    }\n  }, [form.category]);\n\n  // Fetch sets when category or section changes\n  useEffect(() => {\n    if (form.category && form.section) {\n      fetchSets(form.category, form.section);\n    } else {\n      setSets([]);\n      setForm(prev => ({\n        ...prev,\n        set: ''\n      }));\n    }\n  }, [form.category, form.section]);\n  const fetchSets = async (category, section) => {\n    try {\n      const res = await axios.get(`http://localhost:3000/api/question-papers/${category}/sections/${section}/sets`);\n      const fetchedSets = res.data.map(s => typeof s === 'string' ? s : s.name);\n      setSets(fetchedSets);\n    } catch (err) {\n      console.error('Error fetching sets:', err);\n      setSets([]);\n    }\n  };\n  const createSet = async () => {\n    if (!newSetName.trim()) {\n      alert('Set name is required');\n      return;\n    }\n    try {\n      const payload = {\n        setName: newSetName.trim()\n      };\n      if (setTimeLimit !== '' && setTimeLimit !== null) {\n        payload.timeLimit = Number(setTimeLimit);\n      }\n      await axios.post(`http://localhost:3000/api/question-papers/${form.category}/sections/${form.section}/sets`, payload);\n      alert('✅ Set created successfully');\n      setCreateNewSet(false);\n      setForm(prev => ({\n        ...prev,\n        set: newSetName.trim()\n      }));\n      setNewSetName('');\n      setSetTimeLimit('');\n      fetchSets(form.category, form.section);\n    } catch (err) {\n      console.error('Failed to create set:', err);\n      alert('❌ Failed to create set');\n    }\n  };\n  const updateTimeLimit = async () => {\n    try {\n      await axios.patch(`http://localhost:3000/api/question-papers/${form.category}/sections/${form.section}/sets/${form.set}/time-limit`, {\n        timeLimit: Number(setTimeLimit)\n      });\n      alert('✅ Time limit updated');\n    } catch (err) {\n      console.error('Failed to update time limit:', err);\n      alert('❌ Failed to update time limit');\n    }\n  };\n  const deleteTimeLimit = async () => {\n    try {\n      await axios.delete(`http://localhost:3000/api/question-papers/${form.category}/sections/${form.section}/sets/${form.set}/time-limit`);\n      alert('✅ Time limit deleted');\n      setSetTimeLimit('');\n    } catch (err) {\n      console.error('Failed to delete time limit:', err);\n      alert('❌ Failed to delete time limit');\n    }\n  };\n  const handleCategoryChange = e => {\n    const selectedCategory = e.target.value;\n    setForm({\n      category: selectedCategory,\n      section: '',\n      set: '',\n      questionText: '',\n      questionImage: null,\n      questionAudio: null,\n      options: [{\n        type: 'text',\n        content: ''\n      }, {\n        type: 'text',\n        content: ''\n      }, {\n        type: 'text',\n        content: ''\n      }, {\n        type: 'text',\n        content: ''\n      }],\n      correctAnswer: 'a',\n      timer: null\n    });\n    setSections(sectionMap[selectedCategory] || []);\n    setSets([]);\n    setCreateNewSet(false);\n    setNewSetName('');\n    setSetTimeLimit('');\n    setUseCustomTimer(false);\n  };\n  const handleSectionChange = e => {\n    const selectedSection = e.target.value;\n    setForm(prev => ({\n      ...prev,\n      section: selectedSection,\n      set: '',\n      questionText: '',\n      questionImage: null,\n      questionAudio: null,\n      options: [{\n        type: 'text',\n        content: ''\n      }, {\n        type: 'text',\n        content: ''\n      }, {\n        type: 'text',\n        content: ''\n      }, {\n        type: 'text',\n        content: ''\n      }],\n      correctAnswer: 'a',\n      timer: null\n    }));\n    fetchSets(form.category, selectedSection);\n    setCreateNewSet(false);\n    setNewSetName('');\n    setSetTimeLimit('');\n    setUseCustomTimer(false);\n  };\n  const handleSetChange = async e => {\n    const selectedSet = e.target.value;\n    setForm(prev => ({\n      ...prev,\n      set: selectedSet\n    }));\n    try {\n      const res = await axios.get(`http://localhost:3000/api/question-papers/${form.category}/sections/${form.section}/sets`);\n      const currentSet = res.data.find(s => typeof s === 'string' ? s === selectedSet : s.name === selectedSet);\n      if (currentSet && currentSet.timeLimit !== undefined && currentSet.timeLimit !== null) {\n        setSetTimeLimit(String(currentSet.timeLimit));\n        setForm(prev => ({\n          ...prev,\n          timer: null\n        }));\n        setUseCustomTimer(false);\n      } else {\n        setSetTimeLimit('');\n        setForm(prev => ({\n          ...prev,\n          timer: null\n        }));\n      }\n    } catch (err) {\n      console.error('Error loading set time:', err);\n      setSetTimeLimit('');\n      setForm(prev => ({\n        ...prev,\n        timer: null\n      }));\n    }\n  };\n  const handleOptionChange = (index, field, value, isFile = false) => {\n    const updatedOptions = [...form.options];\n    updatedOptions[index][field] = isFile ? value[0] : value;\n    setForm({\n      ...form,\n      options: updatedOptions\n    });\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      files\n    } = e.target;\n    if (files) {\n      setForm({\n        ...form,\n        [name]: files[0]\n      });\n    } else {\n      setForm({\n        ...form,\n        [name]: value\n      });\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('category', form.category);\n    formData.append('section', form.section);\n    formData.append('set', createNewSet ? newSetName.trim() : form.set);\n    formData.append('questionText', form.questionText);\n    if (form.questionImage) formData.append('questionImage', form.questionImage);\n    if (form.questionAudio) formData.append('questionAudio', form.questionAudio);\n    formData.append('correctAnswer', form.correctAnswer);\n    formData.append('timer', useCustomTimer ? form.timer || 0 : setTimeLimit || 0);\n    form.options.forEach((opt, idx) => {\n      formData.append(`options[${idx}][type]`, opt.type);\n      formData.append(`options[${idx}][content]`, opt.content);\n    });\n    try {\n      await axios.post('http://localhost:3000/api/questions/create', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert('✅ Question created with file uploads!');\n      // Reset form if needed here\n    } catch (err) {\n      console.error('❌ Error submitting question:', err);\n      alert('❌ Error submitting question');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-4xl p-6 mx-auto bg-white rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4 text-2xl font-bold\",\n      children: \"Create Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-medium\",\n          children: \"Category\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"category\",\n          value: form.category,\n          onChange: handleCategoryChange,\n          className: \"w-full p-2 border rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Select Category --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: cat,\n            children: cat\n          }, cat, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), sections.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-medium\",\n          children: \"Section\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"section\",\n          value: form.section,\n          onChange: handleSectionChange,\n          className: \"w-full p-2 border rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Select Section --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this), sections.map(sec => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: sec,\n            children: sec\n          }, sec, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 11\n      }, this), form.section && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-medium\",\n          children: \"Set\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 13\n        }, this), !createNewSet ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"set\",\n            value: form.set,\n            onChange: handleSetChange,\n            className: \"w-full p-2 border rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"-- Select Set --\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 19\n            }, this), sets.map(s => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: s,\n              children: s\n            }, s, false, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 21\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              setCreateNewSet(true);\n              setNewSetName('');\n              setSetTimeLimit('');\n            },\n            className: \"mt-2 text-sm text-blue-600 underline\",\n            children: \"+ Create New Set\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 17\n          }, this), form.set && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2 space-y-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Update time limit in seconds\",\n              value: setTimeLimit || '',\n              onChange: e => setSetTimeLimit(e.target.value),\n              className: \"w-full p-2 border rounded\",\n              min: \"0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex gap-4\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: updateTimeLimit,\n                className: \"px-3 py-1 text-white bg-blue-600 rounded\",\n                children: \"Update Time Limit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: deleteTimeLimit,\n                className: \"px-3 py-1 text-white bg-red-600 rounded\",\n                children: \"Delete Time Limit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2 space-y-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter new set name\",\n            value: newSetName,\n            onChange: e => setNewSetName(e.target.value),\n            className: \"w-full p-2 border rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"Optional: Set time limit in seconds\",\n            value: setTimeLimit || '',\n            onChange: e => setSetTimeLimit(e.target.value),\n            className: \"w-full p-2 border rounded\",\n            min: \"0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: createSet,\n              className: \"px-3 py-1 text-white bg-green-600 rounded\",\n              children: \"Create Set\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setCreateNewSet(false),\n              className: \"text-sm text-gray-500 underline\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-medium\",\n          children: \"Question Text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"questionText\",\n          value: form.questionText,\n          onChange: handleChange,\n          className: \"w-full p-2 border rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-medium\",\n          children: \"Question Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"questionImage\",\n          accept: \"image/*\",\n          onChange: handleChange,\n          className: \"w-full p-2 border rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-medium\",\n          children: \"Question Audio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"questionAudio\",\n          accept: \"audio/*\",\n          onChange: handleChange,\n          className: \"w-full p-2 border rounded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-medium\",\n          children: \"Options\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }, this), form.options.map((option, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2 mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"select\", {\n            value: option.type,\n            onChange: e => handleOptionChange(idx, 'type', e.target.value),\n            className: \"p-2 border rounded\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"text\",\n              children: \"Text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"image\",\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"audio\",\n              children: \"Audio\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 456,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 15\n          }, this), option.type === 'text' ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: `Option ${String.fromCharCode(97 + idx)}`,\n            value: option.content,\n            onChange: e => handleOptionChange(idx, 'content', e.target.value),\n            className: \"w-full p-2 border rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: option.type === 'image' ? 'image/*' : 'audio/*',\n            onChange: e => handleOptionChange(idx, 'content', e.target.files, true),\n            className: \"w-full p-2 border rounded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 17\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-medium\",\n          children: \"Correct Answer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"correctAnswer\",\n          value: form.correctAnswer,\n          onChange: handleChange,\n          className: \"w-full p-2 border rounded\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"a\",\n            children: \"A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"b\",\n            children: \"B\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"c\",\n            children: \"C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"d\",\n            children: \"D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block font-medium\",\n          children: \"Timer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 11\n        }, this), setTimeLimit !== '' && !useCustomTimer && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mb-1 text-sm text-gray-600\",\n          children: [\"Using set timer: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [setTimeLimit, \" seconds\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center gap-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: useCustomTimer,\n            onChange: () => {\n              setUseCustomTimer(prev => !prev);\n              setForm(prev => ({\n                ...prev,\n                timer: !useCustomTimer ? setTimeLimit || '' : null\n              }));\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 503,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-sm\",\n            children: \"Use custom timer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 514,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 11\n        }, this), useCustomTimer && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"timer\",\n          value: form.timer || '',\n          onChange: handleChange,\n          className: \"w-full p-2 mt-1 border rounded\",\n          placeholder: \"Enter custom timer in seconds\",\n          min: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 517,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 495,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"px-4 py-2 text-white bg-blue-600 rounded hover:bg-blue-700\",\n        children: \"Submit Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 5\n  }, this);\n};\n_s(Question, \"9E0SiVCVzryiaCzi24uz1Ueqslw=\");\n_c = Question;\nexport default Question;\nvar _c;\n$RefreshReg$(_c, \"Question\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Question","_s","categories","setCategories","sections","setSections","sets","setSets","createNewSet","setCreateNewSet","newSetName","setNewSetName","setTimeLimit","setSetTimeLimit","useCustomTimer","setUseCustomTimer","form","setForm","category","section","set","questionText","questionImage","questionAudio","options","type","content","correctAnswer","timer","sectionMap","Beginner","Intermediate","Advanced","fetchCategories","res","get","data","err","console","error","fetchSections","prev","fetchSets","fetchedSets","map","s","name","createSet","trim","alert","payload","setName","timeLimit","Number","post","updateTimeLimit","patch","deleteTimeLimit","delete","handleCategoryChange","e","selectedCategory","target","value","handleSectionChange","selectedSection","handleSetChange","selectedSet","currentSet","find","undefined","String","handleOptionChange","index","field","isFile","updatedOptions","handleChange","files","handleSubmit","preventDefault","formData","FormData","append","forEach","opt","idx","headers","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","cat","length","sec","onClick","placeholder","min","accept","option","fromCharCode","checked","_c","$RefreshReg$"],"sources":["D:/Exam-portel/frontend/src/pages/Question.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst Question = () => {\n  const [categories, setCategories] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [sets, setSets] = useState([]);\n  const [createNewSet, setCreateNewSet] = useState(false);\n  const [newSetName, setNewSetName] = useState('');\n  const [setTimeLimit, setSetTimeLimit] = useState('');\n  const [useCustomTimer, setUseCustomTimer] = useState(false);\n\n  const [form, setForm] = useState({\n    category: '',\n    section: '',\n    set: '',\n    questionText: '',\n    questionImage: null,\n    questionAudio: null,\n    options: [\n      { type: 'text', content: '' },\n      { type: 'text', content: '' },\n      { type: 'text', content: '' },\n      { type: 'text', content: '' },\n    ],\n    correctAnswer: 'a',\n    timer: null,\n  });\n\n  const sectionMap = {\n    Beginner: ['Beginner', 'Intermediate', 'Advanced', 'Pro Advanced'],\n    Intermediate: ['Beginner Challenge', 'Intermediate Challenge', 'Advanced Challenge', 'Pro Challenge'],\n    Advanced: ['Beginner Level', 'Intermediate Level', 'Advanced Level', 'Pro Level'],\n  };\n\n  // Fetch categories on mount\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const res = await axios.get('http://localhost:3000/api/categories');\n        setCategories(res.data);\n      } catch (err) {\n        console.error('Error fetching categories:', err);\n      }\n    };\n    fetchCategories();\n  }, []);\n\n  // Fetch sections when category changes\n  useEffect(() => {\n    if (form.category) {\n      const fetchSections = async () => {\n        try {\n          const res = await axios.get(`http://localhost:3000/api/categories/${form.category}/sections`);\n          setSections(res.data);\n        } catch (err) {\n          console.error('Error fetching sections:', err);\n          setSections([]);\n        }\n      };\n      fetchSections();\n    } else {\n      setSections([]);\n      setForm(prev => ({ ...prev, section: '', set: '' }));\n    }\n  }, [form.category]);\n\n  // Fetch sets when category or section changes\n  useEffect(() => {\n    if (form.category && form.section) {\n      fetchSets(form.category, form.section);\n    } else {\n      setSets([]);\n      setForm(prev => ({ ...prev, set: '' }));\n    }\n  }, [form.category, form.section]);\n\n  const fetchSets = async (category, section) => {\n    try {\n      const res = await axios.get(\n        `http://localhost:3000/api/question-papers/${category}/sections/${section}/sets`\n      );\n      const fetchedSets = res.data.map((s) => (typeof s === 'string' ? s : s.name));\n      setSets(fetchedSets);\n    } catch (err) {\n      console.error('Error fetching sets:', err);\n      setSets([]);\n    }\n  };\n\n  const createSet = async () => {\n    if (!newSetName.trim()) {\n      alert('Set name is required');\n      return;\n    }\n\n    try {\n      const payload = { setName: newSetName.trim() };\n      if (setTimeLimit !== '' && setTimeLimit !== null) {\n        payload.timeLimit = Number(setTimeLimit);\n      }\n      await axios.post(\n        `http://localhost:3000/api/question-papers/${form.category}/sections/${form.section}/sets`,\n        payload\n      );\n      alert('✅ Set created successfully');\n      setCreateNewSet(false);\n      setForm((prev) => ({ ...prev, set: newSetName.trim() }));\n      setNewSetName('');\n      setSetTimeLimit('');\n      fetchSets(form.category, form.section);\n    } catch (err) {\n      console.error('Failed to create set:', err);\n      alert('❌ Failed to create set');\n    }\n  };\n\n  const updateTimeLimit = async () => {\n    try {\n      await axios.patch(\n        `http://localhost:3000/api/question-papers/${form.category}/sections/${form.section}/sets/${form.set}/time-limit`,\n        {\n          timeLimit: Number(setTimeLimit),\n        }\n      );\n      alert('✅ Time limit updated');\n    } catch (err) {\n      console.error('Failed to update time limit:', err);\n      alert('❌ Failed to update time limit');\n    }\n  };\n\n  const deleteTimeLimit = async () => {\n    try {\n      await axios.delete(\n        `http://localhost:3000/api/question-papers/${form.category}/sections/${form.section}/sets/${form.set}/time-limit`\n      );\n      alert('✅ Time limit deleted');\n      setSetTimeLimit('');\n    } catch (err) {\n      console.error('Failed to delete time limit:', err);\n      alert('❌ Failed to delete time limit');\n    }\n  };\n\n  const handleCategoryChange = (e) => {\n    const selectedCategory = e.target.value;\n    setForm({\n      category: selectedCategory,\n      section: '',\n      set: '',\n      questionText: '',\n      questionImage: null,\n      questionAudio: null,\n      options: [\n        { type: 'text', content: '' },\n        { type: 'text', content: '' },\n        { type: 'text', content: '' },\n        { type: 'text', content: '' },\n      ],\n      correctAnswer: 'a',\n      timer: null,\n    });\n    setSections(sectionMap[selectedCategory] || []);\n    setSets([]);\n    setCreateNewSet(false);\n    setNewSetName('');\n    setSetTimeLimit('');\n    setUseCustomTimer(false);\n  };\n\n  const handleSectionChange = (e) => {\n    const selectedSection = e.target.value;\n    setForm((prev) => ({\n      ...prev,\n      section: selectedSection,\n      set: '',\n      questionText: '',\n      questionImage: null,\n      questionAudio: null,\n      options: [\n        { type: 'text', content: '' },\n        { type: 'text', content: '' },\n        { type: 'text', content: '' },\n        { type: 'text', content: '' },\n      ],\n      correctAnswer: 'a',\n      timer: null,\n    }));\n    fetchSets(form.category, selectedSection);\n    setCreateNewSet(false);\n    setNewSetName('');\n    setSetTimeLimit('');\n    setUseCustomTimer(false);\n  };\n\n  const handleSetChange = async (e) => {\n    const selectedSet = e.target.value;\n    setForm((prev) => ({ ...prev, set: selectedSet }));\n\n    try {\n      const res = await axios.get(\n        `http://localhost:3000/api/question-papers/${form.category}/sections/${form.section}/sets`\n      );\n      const currentSet = res.data.find((s) =>\n        typeof s === 'string' ? s === selectedSet : s.name === selectedSet\n      );\n      if (currentSet && currentSet.timeLimit !== undefined && currentSet.timeLimit !== null) {\n        setSetTimeLimit(String(currentSet.timeLimit));\n        setForm((prev) => ({ ...prev, timer: null }));\n        setUseCustomTimer(false);\n      } else {\n        setSetTimeLimit('');\n        setForm((prev) => ({ ...prev, timer: null }));\n      }\n    } catch (err) {\n      console.error('Error loading set time:', err);\n      setSetTimeLimit('');\n      setForm((prev) => ({ ...prev, timer: null }));\n    }\n  };\n\n  const handleOptionChange = (index, field, value, isFile = false) => {\n    const updatedOptions = [...form.options];\n    updatedOptions[index][field] = isFile ? value[0] : value;\n    setForm({ ...form, options: updatedOptions });\n  };\n\n  const handleChange = (e) => {\n    const { name, value, files } = e.target;\n    if (files) {\n      setForm({ ...form, [name]: files[0] });\n    } else {\n      setForm({ ...form, [name]: value });\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n\n    formData.append('category', form.category);\n    formData.append('section', form.section);\n    formData.append('set', createNewSet ? newSetName.trim() : form.set);\n    formData.append('questionText', form.questionText);\n    if (form.questionImage) formData.append('questionImage', form.questionImage);\n    if (form.questionAudio) formData.append('questionAudio', form.questionAudio);\n    formData.append('correctAnswer', form.correctAnswer);\n    formData.append('timer', useCustomTimer ? form.timer || 0 : setTimeLimit || 0);\n\n    form.options.forEach((opt, idx) => {\n      formData.append(`options[${idx}][type]`, opt.type);\n      formData.append(`options[${idx}][content]`, opt.content);\n    });\n\n    try {\n      await axios.post('http://localhost:3000/api/questions/create', formData, {\n        headers: { 'Content-Type': 'multipart/form-data' },\n      });\n      alert('✅ Question created with file uploads!');\n      // Reset form if needed here\n    } catch (err) {\n      console.error('❌ Error submitting question:', err);\n      alert('❌ Error submitting question');\n    }\n  };\n\n  return (\n    <div className=\"max-w-4xl p-6 mx-auto bg-white rounded shadow\">\n      <h2 className=\"mb-4 text-2xl font-bold\">Create Question</h2>\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\n        {/* Category */}\n        <div>\n          <label className=\"block font-medium\">Category</label>\n          <select\n            name=\"category\"\n            value={form.category}\n            onChange={handleCategoryChange}\n            className=\"w-full p-2 border rounded\"\n          >\n            <option value=\"\">-- Select Category --</option>\n            {categories.map((cat) => (\n              <option key={cat} value={cat}>\n                {cat}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        {/* Section */}\n        {sections.length > 0 && (\n          <div>\n            <label className=\"block font-medium\">Section</label>\n            <select\n              name=\"section\"\n              value={form.section}\n              onChange={handleSectionChange}\n              className=\"w-full p-2 border rounded\"\n            >\n              <option value=\"\">-- Select Section --</option>\n              {sections.map((sec) => (\n                <option key={sec} value={sec}>\n                  {sec}\n                </option>\n              ))}\n            </select>\n          </div>\n        )}\n\n        {/* Set */}\n        {form.section && (\n          <div>\n            <label className=\"block font-medium\">Set</label>\n            {!createNewSet ? (\n              <>\n                <select\n                  name=\"set\"\n                  value={form.set}\n                  onChange={handleSetChange}\n                  className=\"w-full p-2 border rounded\"\n                >\n                  <option value=\"\">-- Select Set --</option>\n                  {sets.map((s) => (\n                    <option key={s} value={s}>\n                      {s}\n                    </option>\n                  ))}\n                </select>\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    setCreateNewSet(true);\n                    setNewSetName('');\n                    setSetTimeLimit('');\n                  }}\n                  className=\"mt-2 text-sm text-blue-600 underline\"\n                >\n                  + Create New Set\n                </button>\n\n                {form.set && (\n                  <div className=\"mt-2 space-y-2\">\n                    <input\n                      type=\"number\"\n                      placeholder=\"Update time limit in seconds\"\n                      value={setTimeLimit || ''}\n                      onChange={(e) => setSetTimeLimit(e.target.value)}\n                      className=\"w-full p-2 border rounded\"\n                      min=\"0\"\n                    />\n                    <div className=\"flex gap-4\">\n                      <button\n                        type=\"button\"\n                        onClick={updateTimeLimit}\n                        className=\"px-3 py-1 text-white bg-blue-600 rounded\"\n                      >\n                        Update Time Limit\n                      </button>\n                      <button\n                        type=\"button\"\n                        onClick={deleteTimeLimit}\n                        className=\"px-3 py-1 text-white bg-red-600 rounded\"\n                      >\n                        Delete Time Limit\n                      </button>\n                    </div>\n                  </div>\n                )}\n              </>\n            ) : (\n              <div className=\"mt-2 space-y-2\">\n                <input\n                  type=\"text\"\n                  placeholder=\"Enter new set name\"\n                  value={newSetName}\n                  onChange={(e) => setNewSetName(e.target.value)}\n                  className=\"w-full p-2 border rounded\"\n                />\n                <input\n                  type=\"number\"\n                  placeholder=\"Optional: Set time limit in seconds\"\n                  value={setTimeLimit || ''}\n                  onChange={(e) => setSetTimeLimit(e.target.value)}\n                  className=\"w-full p-2 border rounded\"\n                  min=\"0\"\n                />\n                <div className=\"flex gap-4\">\n                  <button\n                    type=\"button\"\n                    onClick={createSet}\n                    className=\"px-3 py-1 text-white bg-green-600 rounded\"\n                  >\n                    Create Set\n                  </button>\n                  <button\n                    type=\"button\"\n                    onClick={() => setCreateNewSet(false)}\n                    className=\"text-sm text-gray-500 underline\"\n                  >\n                    Cancel\n                  </button>\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n\n        {/* Question Text */}\n        <div>\n          <label className=\"block font-medium\">Question Text</label>\n          <input\n            type=\"text\"\n            name=\"questionText\"\n            value={form.questionText}\n            onChange={handleChange}\n            className=\"w-full p-2 border rounded\"\n          />\n        </div>\n\n        {/* Question Image */}\n        <div>\n          <label className=\"block font-medium\">Question Image</label>\n          <input\n            type=\"file\"\n            name=\"questionImage\"\n            accept=\"image/*\"\n            onChange={handleChange}\n            className=\"w-full p-2 border rounded\"\n          />\n        </div>\n\n        {/* Question Audio */}\n        <div>\n          <label className=\"block font-medium\">Question Audio</label>\n          <input\n            type=\"file\"\n            name=\"questionAudio\"\n            accept=\"audio/*\"\n            onChange={handleChange}\n            className=\"w-full p-2 border rounded\"\n          />\n        </div>\n\n        {/* Options */}\n        <div>\n          <label className=\"block font-medium\">Options</label>\n          {form.options.map((option, idx) => (\n            <div key={idx} className=\"flex items-center gap-2 mb-2\">\n              <select\n                value={option.type}\n                onChange={(e) => handleOptionChange(idx, 'type', e.target.value)}\n                className=\"p-2 border rounded\"\n              >\n                <option value=\"text\">Text</option>\n                <option value=\"image\">Image</option>\n                <option value=\"audio\">Audio</option>\n              </select>\n              {option.type === 'text' ? (\n                <input\n                  type=\"text\"\n                  placeholder={`Option ${String.fromCharCode(97 + idx)}`}\n                  value={option.content}\n                  onChange={(e) => handleOptionChange(idx, 'content', e.target.value)}\n                  className=\"w-full p-2 border rounded\"\n                />\n              ) : (\n                <input\n                  type=\"file\"\n                  accept={option.type === 'image' ? 'image/*' : 'audio/*'}\n                  onChange={(e) => handleOptionChange(idx, 'content', e.target.files, true)}\n                  className=\"w-full p-2 border rounded\"\n                />\n              )}\n            </div>\n          ))}\n        </div>\n\n        {/* Correct Answer */}\n        <div>\n          <label className=\"block font-medium\">Correct Answer</label>\n          <select\n            name=\"correctAnswer\"\n            value={form.correctAnswer}\n            onChange={handleChange}\n            className=\"w-full p-2 border rounded\"\n          >\n            <option value=\"a\">A</option>\n            <option value=\"b\">B</option>\n            <option value=\"c\">C</option>\n            <option value=\"d\">D</option>\n          </select>\n        </div>\n\n        {/* Timer */}\n        <div>\n          <label className=\"block font-medium\">Timer</label>\n          {setTimeLimit !== '' && !useCustomTimer && (\n            <p className=\"mb-1 text-sm text-gray-600\">\n              Using set timer: <strong>{setTimeLimit} seconds</strong>\n            </p>\n          )}\n          <div className=\"flex items-center gap-2\">\n            <input\n              type=\"checkbox\"\n              checked={useCustomTimer}\n              onChange={() => {\n                setUseCustomTimer((prev) => !prev);\n                setForm((prev) => ({\n                  ...prev,\n                  timer: !useCustomTimer ? setTimeLimit || '' : null,\n                }));\n              }}\n            />\n            <span className=\"text-sm\">Use custom timer</span>\n          </div>\n          {useCustomTimer && (\n            <input\n              type=\"number\"\n              name=\"timer\"\n              value={form.timer || ''}\n              onChange={handleChange}\n              className=\"w-full p-2 mt-1 border rounded\"\n              placeholder=\"Enter custom timer in seconds\"\n              min=\"0\"\n            />\n          )}\n        </div>\n\n        {/* Submit */}\n        <button\n          type=\"submit\"\n          className=\"px-4 py-2 text-white bg-blue-600 rounded hover:bg-blue-700\"\n        >\n          Submit Question\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Question;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}