{"ast":null,"code":"var _jsxFileName = \"D:\\\\Quize-API\\\\frontend\\\\src\\\\pages\\\\UserDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserDashboard() {\n  _s();\n  const [username, setUsername] = useState('');\n  const [sections, setSections] = useState([]);\n  const [selectedSection, setSelectedSection] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const storedUser = JSON.parse(localStorage.getItem('user'));\n    if (storedUser !== null && storedUser !== void 0 && storedUser.username) setUsername(storedUser.username);\n    fetchSections();\n  }, []);\n  const fetchSections = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/api/sections');\n      setSections(res.data);\n    } catch (error) {\n      console.error('Failed to fetch sections', error);\n    }\n  };\n  const handleStartQuiz = () => {\n    if (!selectedSection) {\n      alert('Please select a section to start the quiz.');\n      return;\n    }\n    navigate(`/questions/${selectedSection}`); // Assuming route exists like /questions/:sectionId\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-4 space-y-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-xl font-bold\",\n      children: [\"Welcome, \", username || 'User', \"!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedSection,\n      onChange: e => setSelectedSection(e.target.value),\n      className: \"w-full p-2 border\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Section to Start Quiz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), sections.map(sec => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: sec._id,\n        children: sec.name\n      }, sec._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartQuiz,\n      className: \"px-4 py-2 text-white bg-blue-500 rounded\",\n      children: \"Start Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(UserDashboard, \"k8Z5CFedxNkEeQjIz6URrSEDxgA=\", false, function () {\n  return [useNavigate];\n});\n_c = UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","jsxDEV","_jsxDEV","UserDashboard","_s","username","setUsername","sections","setSections","selectedSection","setSelectedSection","navigate","storedUser","JSON","parse","localStorage","getItem","fetchSections","res","get","data","error","console","handleStartQuiz","alert","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","sec","_id","name","onClick","_c","$RefreshReg$"],"sources":["D:/Quize-API/frontend/src/pages/UserDashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\n\nexport default function UserDashboard() {\n  const [username, setUsername] = useState('');\n  const [sections, setSections] = useState([]);\n  const [selectedSection, setSelectedSection] = useState('');\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const storedUser = JSON.parse(localStorage.getItem('user'));\n    if (storedUser?.username) setUsername(storedUser.username);\n    fetchSections();\n  }, []);\n\n  const fetchSections = async () => {\n    try {\n      const res = await axios.get('http://localhost:5000/api/sections');\n      setSections(res.data);\n    } catch (error) {\n      console.error('Failed to fetch sections', error);\n    }\n  };\n\n  const handleStartQuiz = () => {\n    if (!selectedSection) {\n      alert('Please select a section to start the quiz.');\n      return;\n    }\n    navigate(`/questions/${selectedSection}`); // Assuming route exists like /questions/:sectionId\n  };\n\n  return (\n    <div className=\"p-4 space-y-4\">\n      <h1 className=\"text-xl font-bold\">Welcome, {username || 'User'}!</h1>\n\n      <select\n        value={selectedSection}\n        onChange={(e) => setSelectedSection(e.target.value)}\n        className=\"w-full p-2 border\"\n      >\n        <option value=\"\">Select Section to Start Quiz</option>\n        {sections.map((sec) => (\n          <option key={sec._id} value={sec._id}>{sec.name}</option>\n        ))}\n      </select>\n\n      <button\n        onClick={handleStartQuiz}\n        className=\"px-4 py-2 text-white bg-blue-500 rounded\"\n      >\n        Start Quiz\n      </button>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}